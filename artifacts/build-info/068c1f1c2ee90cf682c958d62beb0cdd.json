{
  "id": "068c1f1c2ee90cf682c958d62beb0cdd",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "src/beacon/SimpleVaultBeacon.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport \"../libraries/LibErrors.sol\";\n\n/**\n * @title SimpleVaultBeacon\n * @notice Simplified beacon contract for vault implementations\n * @dev Follows EIP-1967 beacon pattern but doesn't check for IERC165 support\n */\ncontract SimpleVaultBeacon is IERC165 {\n    // Events\n    event ImplementationUpgraded(\n        address indexed oldImplementation, address indexed newImplementation\n    );\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    // State variables\n    address public implementation;\n    address public owner;\n\n    // Modifiers\n    modifier onlyOwner() {\n        if (msg.sender != owner) revert LibErrors.Unauthorized(msg.sender);\n        _;\n    }\n\n    /**\n     * @notice Constructor\n     * @param _implementation Initial implementation address\n     */\n    constructor(address _implementation) {\n        LibErrors.revertIfZeroAddress(_implementation);\n        implementation = _implementation;\n        owner = msg.sender;\n        emit OwnershipTransferred(address(0), msg.sender);\n    }\n\n    /**\n     * @notice Upgrade the implementation\n     * @param newImplementation Address of the new implementation\n     */\n    function upgrade(address newImplementation) external onlyOwner {\n        LibErrors.revertIfZeroAddress(newImplementation);\n        emit ImplementationUpgraded(implementation, newImplementation);\n        implementation = newImplementation;\n    }\n\n    /**\n     * @notice Transfer ownership of the beacon\n     * @param newOwner Address of the new owner\n     */\n    function transferOwnership(address newOwner) external onlyOwner {\n        LibErrors.revertIfZeroAddress(newOwner);\n        emit OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n    }\n\n    /**\n     * @notice Interface support check\n     * @param interfaceId Interface identifier\n     * @return bool True if interface is supported\n     */\n    function supportsInterface(bytes4 interfaceId) public pure override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n/**\n * @title SimpleERC721VaultBeacon\n * @notice Simplified beacon for ERC721 vault implementations\n */\ncontract SimpleERC721VaultBeacon is SimpleVaultBeacon {\n    constructor(address _implementation) SimpleVaultBeacon(_implementation) {}\n}\n\n/**\n * @title SimpleERC1155VaultBeacon\n * @notice Simplified beacon for ERC1155 vault implementations\n */\ncontract SimpleERC1155VaultBeacon is SimpleVaultBeacon {\n    constructor(address _implementation) SimpleVaultBeacon(_implementation) {}\n}\n"
      },
      "src/libraries/LibErrors.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n/// @title LibErrors\n/// @notice Library for centralized error definitions\n/// @dev Contains all custom errors used across the system\nlibrary LibErrors {\n    // ============ Diamond Errors ============\n\n    /// @notice Function does not exist in any facet\n    error FunctionNotFound(bytes4 selector);\n\n    /// @notice Initialization failed during diamond cut\n    error DiamondInitFailed(address initContract, bytes initData);\n\n    /// @notice Invalid facet cut action provided\n    error InvalidFacetCutAction(uint8 action);\n\n    /// @notice Function already exists and cannot be added again\n    error FunctionAlreadyExists(bytes4 selector);\n\n    /// @notice Function doesn't exist and cannot be replaced/removed\n    error FunctionDoesNotExist(bytes4 selector);\n\n    /// @notice Cannot replace function with same function\n    error CannotReplaceSameFunction(bytes4 selector);\n\n    /// @notice Invalid initialization parameters\n    error InvalidInitialization();\n\n    /// @notice Initialization contract has no code\n    error InitializationContractEmpty(address initContract);\n\n    /// @notice Delegate call failed\n    error DelegateCallFailed();\n\n    // ============ Common Errors ============\n\n    /// @notice Zero address provided where a non-zero address is required\n    error ZeroAddress();\n\n    /// @notice Operation attempted by non-owner\n    error Unauthorized(address caller);\n\n    /// @notice Invalid collection address provided\n    error InvalidCollection(address collection);\n\n    /// @notice Factory not set in storage\n    error FactoryNotSet();\n\n    /// @notice Transfer operation failed\n    error TransferFailed();\n\n    /// @notice Invalid implementation contract\n    error InvalidImplementation();\n\n    // ============ Collection Errors ============\n\n    /// @notice Invalid collection type provided\n    error InvalidCollectionType(uint8 collectionType);\n\n    /// @notice Invalid operation for collection type\n    error InvalidCollectionOperation(address collection);\n\n    /// @notice Not the owner of the collection\n    error NotCollectionOwner(address collection, address caller);\n\n    // ============ Vault State Errors ============\n\n    /// @notice Vault is already locked\n    error VaultAlreadyLocked(address collection, uint256 tokenId);\n\n    /// @notice Vault is not locked\n    error VaultNotLocked(address collection, uint256 tokenId);\n\n    /// @notice Vault owner check failed\n    error NotVaultOwner(address collection, uint256 tokenId, address caller);\n\n    // ============ Witness Errors ============\n\n    /// @notice Witness already exists\n    error WitnessAlreadyExists(address witness);\n\n    /// @notice Witness does not exist\n    error WitnessDoesNotExist(address witness);\n\n    /// @notice No witnesses remaining\n    error NoWitnessesRemaining();\n\n    /// @notice Not a witness\n    error NotWitness(address caller);\n\n    // ============ Signature Errors ============\n\n    /// @notice Invalid signature provided\n    error InvalidSignature();\n\n    /// @notice Nonce already used\n    error NonceAlreadyUsed(uint256 nonce);\n\n    // ============ Unvault Errors ============\n\n    /// @notice Unvaulter contract not set\n    error UnvaulterNotSet();\n\n    /// @notice Token already unvaulted\n    error AlreadyUnvaulted(address collection, uint256 tokenId);\n\n    /// @notice Burn operation failed\n    error BurnFailed(address collection, uint256 tokenId);\n\n    // ============ Mint Errors ============\n\n    /// @notice Mint operation failed\n    error MintFailed(address collection, uint256 tokenId);\n\n    /// @notice Invalid amount provided\n    error InvalidAmount(uint256 amount);\n\n    /// @notice Price out of acceptable range\n    error PriceOutOfRange(uint256 provided, uint256 expected, uint256 tolerance);\n\n    /// @notice Invalid token ID\n    error InvalidTokenId(uint256 tokenId);\n\n    /// @notice Incorrect payment amount\n    error IncorrectPayment(uint256 provided, uint256 expected);\n\n    /// @notice Eth transfer failed\n    error ETHTransferFailed();\n\n    /// @notice Array length mismatch\n    error LengthMismatch(uint256 length1, uint256 length2);\n\n    /// @notice Batch size exceeds limit\n    error BatchSizeExceeded(uint256 size, uint256 limit);\n\n    /// @notice Recipient address does not match sender\n    error InvalidRecipient();\n\n    /// @notice Number of serial numbers does not match amount\n    error InvalidSerialNumbersCount();\n\n    /// @notice Required interface is not supported\n    error InterfaceNotSupported(address contractAddress, string interfaceName);\n\n    // ============ Initialization Errors ============\n\n    /// @notice Already initialized\n    error AlreadyInitialized();\n\n    /// @notice Initialization failed\n    error InitializationFailed();\n\n    // ============ Helper Functions ============\n\n    /// @notice Check for zero address\n    function revertIfZeroAddress(address addr) internal pure {\n        if (addr == address(0)) revert ZeroAddress();\n    }\n\n    /// @notice Check for valid collection\n    function revertIfInvalidCollection(address collection, bool isValid) internal pure {\n        if (!isValid) revert InvalidCollection(collection);\n    }\n\n    /// @notice Check for factory\n    function revertIfFactoryNotSet(address factory) internal pure {\n        if (factory == address(0)) revert FactoryNotSet();\n    }\n\n    /// @notice Check for vault lock state\n    function revertIfAlreadyLocked(address collection, uint256 tokenId, bool isLocked)\n        internal\n        pure\n    {\n        if (isLocked) revert VaultAlreadyLocked(collection, tokenId);\n    }\n\n    /// @notice Check for vault unlock state\n    function revertIfNotLocked(address collection, uint256 tokenId, bool isLocked) internal pure {\n        if (!isLocked) revert VaultNotLocked(collection, tokenId);\n    }\n\n    /// @notice Check for witness status\n    function revertIfNotWitness(address caller, bool isWitness) internal pure {\n        if (!isWitness) revert NotWitness(caller);\n    }\n\n    /// @notice Check for correct payment\n    function revertIfIncorrectPayment(uint256 provided, uint256 expected) internal pure {\n        if (provided != expected) revert IncorrectPayment(provided, expected);\n    }\n\n    /// @notice Check for insufficient payment\n    function revertIfInsufficientETH(uint256 provided, uint256 expected) internal pure {\n        if (provided < expected) revert IncorrectPayment(provided, expected);\n    }\n\n    /// @notice Check for price range\n    function revertIfPriceOutOfRange(uint256 provided, uint256 expected, uint256 tolerance)\n        internal\n        pure\n    {\n        if (provided < expected - tolerance || provided > expected + tolerance) {\n            revert PriceOutOfRange(provided, expected, tolerance);\n        }\n    }\n\n    /// @notice Check for vault ownership\n    function revertIfNotVaultOwner(\n        address collection,\n        uint256 tokenId,\n        address caller,\n        address owner\n    ) internal pure {\n        if (caller != owner) revert NotVaultOwner(collection, tokenId, caller);\n    }\n\n    /// @notice Check for collection ownership\n    function revertIfNotCollectionOwner(address collection, address caller, address owner)\n        internal\n        pure\n    {\n        if (caller != owner) revert NotCollectionOwner(collection, caller);\n    }\n\n    /// @notice Check for contract ownership\n    function revertIfNotContractOwner(address caller, address owner) internal pure {\n        if (caller != owner) revert Unauthorized(caller);\n    }\n\n    /// @notice Check for function existence\n    function revertIfFunctionNotFound(bytes4 selector, address facet) internal pure {\n        if (facet == address(0)) revert FunctionNotFound(selector);\n    }\n\n    /// @notice Check for initialization contract\n    function revertIfInitializationInvalid(address initContract, bytes memory initData)\n        internal\n        pure\n    {\n        if (initContract == address(0) && initData.length > 0) revert InvalidInitialization();\n        if (initContract != address(0) && initData.length == 0) revert InvalidInitialization();\n    }\n\n    /// @notice Check for length mismatch\n    function revertIfLengthMismatch(uint256 length1, uint256 length2) internal pure {\n        if (length1 != length2) revert LengthMismatch(length1, length2);\n    }\n\n    /// @notice Check for batch size limit\n    function revertIfBatchSizeExceeded(uint256 size, uint256 limit) internal pure {\n        if (size > limit) revert BatchSizeExceeded(size, limit);\n    }\n\n    /// @notice Check if recipient matches sender\n    function revertIfInvalidRecipient(address recipient, address sender) internal pure {\n        if (recipient != sender) revert InvalidRecipient();\n    }\n\n    /// @notice Check if contract supports required interface\n    function revertIfInterfaceNotSupported(\n        address contractAddress,\n        bool isSupported,\n        string memory interfaceName\n    ) internal pure {\n        if (!isSupported) revert InterfaceNotSupported(contractAddress, interfaceName);\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": { "enabled": true, "runs": 200 },
      "viaIR": true,
      "evmVersion": "shanghai",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": ["ast"]
        }
      },
      "metadata": { "useLiteralContent": true }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
          "exportedSymbols": { "IERC165": [11] },
          "id": 12,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": ["solidity", "^", "0.8", ".20"],
              "nodeType": "PragmaDirective",
              "src": "115:24:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC165",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "141:280:0",
                "text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 11,
              "linearizedBaseContracts": [11],
              "name": "IERC165",
              "nameLocation": "432:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 3,
                    "nodeType": "StructuredDocumentation",
                    "src": "446:340:0",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 10,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "800:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 6,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "825:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "818:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "818:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "817:20:0"
                  },
                  "returnParameters": {
                    "id": 9,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 8,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "861:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 7,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "861:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "860:6:0"
                  },
                  "scope": 11,
                  "src": "791:76:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 12,
              "src": "422:447:0",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "115:755:0"
        },
        "id": 0
      },
      "src/beacon/SimpleVaultBeacon.sol": {
        "ast": {
          "absolutePath": "src/beacon/SimpleVaultBeacon.sol",
          "exportedSymbols": {
            "IERC165": [11],
            "LibErrors": [753],
            "SimpleERC1155VaultBeacon": [173],
            "SimpleERC721VaultBeacon": [160],
            "SimpleVaultBeacon": [147]
          },
          "id": 174,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 13,
              "literals": ["solidity", "^", "0.8", ".19"],
              "nodeType": "PragmaDirective",
              "src": "32:24:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "id": 14,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 174,
              "sourceUnit": 12,
              "src": "58:65:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "src/libraries/LibErrors.sol",
              "file": "../libraries/LibErrors.sol",
              "id": 15,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 174,
              "sourceUnit": 754,
              "src": "124:36:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 17,
                    "name": "IERC165",
                    "nameLocations": ["370:7:1"],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 11,
                    "src": "370:7:1"
                  },
                  "id": 18,
                  "nodeType": "InheritanceSpecifier",
                  "src": "370:7:1"
                }
              ],
              "canonicalName": "SimpleVaultBeacon",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 16,
                "nodeType": "StructuredDocumentation",
                "src": "162:177:1",
                "text": " @title SimpleVaultBeacon\n @notice Simplified beacon contract for vault implementations\n @dev Follows EIP-1967 beacon pattern but doesn't check for IERC165 support"
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [147, 11],
              "name": "SimpleVaultBeacon",
              "nameLocation": "349:17:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "1a5ca99a64512489fd9455e8da426740174107a69292fca0a8b80b08f6f67892",
                  "id": 24,
                  "name": "ImplementationUpgraded",
                  "nameLocation": "404:22:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "oldImplementation",
                        "nameLocation": "452:17:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "436:33:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "436:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newImplementation",
                        "nameLocation": "487:17:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "471:33:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "471:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "426:84:1"
                  },
                  "src": "398:113:1"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 30,
                  "name": "OwnershipTransferred",
                  "nameLocation": "522:20:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 26,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "559:13:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 30,
                        "src": "543:29:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 25,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "543:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 28,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "590:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 30,
                        "src": "574:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 27,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "574:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "542:57:1"
                  },
                  "src": "516:84:1"
                },
                {
                  "constant": false,
                  "functionSelector": "5c60da1b",
                  "id": 32,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nameLocation": "644:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "629:29:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "629:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8da5cb5b",
                  "id": 34,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "679:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "664:20:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "664:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "729:94:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 36,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "743:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 37,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "747:6:1",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "743:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 38,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "757:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "743:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 47,
                        "nodeType": "IfStatement",
                        "src": "739:66:1",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 43,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "794:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 44,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "798:6:1",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "794:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 40,
                                "name": "LibErrors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 753,
                                "src": "771:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_LibErrors_$753_$",
                                  "typeString": "type(library LibErrors)"
                                }
                              },
                              "id": 42,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "781:12:1",
                              "memberName": "Unauthorized",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 227,
                              "src": "771:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                "typeString": "function (address) pure returns (error)"
                              }
                            },
                            "id": 45,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "771:34:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 46,
                          "nodeType": "RevertStatement",
                          "src": "764:41:1"
                        }
                      },
                      {
                        "id": 48,
                        "nodeType": "PlaceholderStatement",
                        "src": "815:1:1"
                      }
                    ]
                  },
                  "id": 50,
                  "name": "onlyOwner",
                  "nameLocation": "717:9:1",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 35,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "726:2:1"
                  },
                  "src": "708:115:1",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 80,
                    "nodeType": "Block",
                    "src": "970:192:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 59,
                              "name": "_implementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "1010:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 56,
                              "name": "LibErrors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 753,
                              "src": "980:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_LibErrors_$753_$",
                                "typeString": "type(library LibErrors)"
                              }
                            },
                            "id": 58,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "990:19:1",
                            "memberName": "revertIfZeroAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 410,
                            "src": "980:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "980:46:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 61,
                        "nodeType": "ExpressionStatement",
                        "src": "980:46:1"
                      },
                      {
                        "expression": {
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 62,
                            "name": "implementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "1036:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 63,
                            "name": "_implementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "1053:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1036:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 65,
                        "nodeType": "ExpressionStatement",
                        "src": "1036:32:1"
                      },
                      {
                        "expression": {
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 66,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "1078:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 67,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1086:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 68,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1090:6:1",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1086:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1078:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 70,
                        "nodeType": "ExpressionStatement",
                        "src": "1078:18:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 74,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1140:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 73,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1132:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 72,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1132:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 75,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1132:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 76,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1144:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 77,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1148:6:1",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1144:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 71,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "1111:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1111:44:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 79,
                        "nodeType": "EmitStatement",
                        "src": "1106:49:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "829:99:1",
                    "text": " @notice Constructor\n @param _implementation Initial implementation address"
                  },
                  "id": 81,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 54,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 53,
                        "mutability": "mutable",
                        "name": "_implementation",
                        "nameLocation": "953:15:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 81,
                        "src": "945:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 52,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "945:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "944:25:1"
                  },
                  "returnParameters": {
                    "id": 55,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "970:0:1"
                  },
                  "scope": 147,
                  "src": "933:229:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 104,
                    "nodeType": "Block",
                    "src": "1355:181:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 92,
                              "name": "newImplementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84,
                              "src": "1395:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 89,
                              "name": "LibErrors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 753,
                              "src": "1365:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_LibErrors_$753_$",
                                "typeString": "type(library LibErrors)"
                              }
                            },
                            "id": 91,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1375:19:1",
                            "memberName": "revertIfZeroAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 410,
                            "src": "1365:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1365:48:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 94,
                        "nodeType": "ExpressionStatement",
                        "src": "1365:48:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 96,
                              "name": "implementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "1451:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 97,
                              "name": "newImplementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84,
                              "src": "1467:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 95,
                            "name": "ImplementationUpgraded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "1428:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1428:57:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 99,
                        "nodeType": "EmitStatement",
                        "src": "1423:62:1"
                      },
                      {
                        "expression": {
                          "id": 102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 100,
                            "name": "implementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "1495:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 101,
                            "name": "newImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1512:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1495:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 103,
                        "nodeType": "ExpressionStatement",
                        "src": "1495:34:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 82,
                    "nodeType": "StructuredDocumentation",
                    "src": "1168:119:1",
                    "text": " @notice Upgrade the implementation\n @param newImplementation Address of the new implementation"
                  },
                  "functionSelector": "0900f010",
                  "id": 105,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 87,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 86,
                        "name": "onlyOwner",
                        "nameLocations": ["1345:9:1"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 50,
                        "src": "1345:9:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1345:9:1"
                    }
                  ],
                  "name": "upgrade",
                  "nameLocation": "1301:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 85,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 84,
                        "mutability": "mutable",
                        "name": "newImplementation",
                        "nameLocation": "1317:17:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 105,
                        "src": "1309:25:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 83,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1309:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1308:27:1"
                  },
                  "returnParameters": {
                    "id": 88,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1355:0:1"
                  },
                  "scope": 147,
                  "src": "1292:244:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 128,
                    "nodeType": "Block",
                    "src": "1718:134:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 116,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 108,
                              "src": "1758:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 113,
                              "name": "LibErrors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 753,
                              "src": "1728:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_LibErrors_$753_$",
                                "typeString": "type(library LibErrors)"
                              }
                            },
                            "id": 115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1738:19:1",
                            "memberName": "revertIfZeroAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 410,
                            "src": "1728:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1728:39:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 118,
                        "nodeType": "ExpressionStatement",
                        "src": "1728:39:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 120,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "1803:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 121,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 108,
                              "src": "1810:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 119,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "1782:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1782:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 123,
                        "nodeType": "EmitStatement",
                        "src": "1777:42:1"
                      },
                      {
                        "expression": {
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 124,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "1829:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 125,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 108,
                            "src": "1837:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1829:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 127,
                        "nodeType": "ExpressionStatement",
                        "src": "1829:16:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 106,
                    "nodeType": "StructuredDocumentation",
                    "src": "1542:107:1",
                    "text": " @notice Transfer ownership of the beacon\n @param newOwner Address of the new owner"
                  },
                  "functionSelector": "f2fde38b",
                  "id": 129,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 111,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 110,
                        "name": "onlyOwner",
                        "nameLocations": ["1708:9:1"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 50,
                        "src": "1708:9:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1708:9:1"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "1663:17:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 109,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 108,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1689:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 129,
                        "src": "1681:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 107,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1681:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1680:18:1"
                  },
                  "returnParameters": {
                    "id": 112,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1718:0:1"
                  },
                  "scope": 147,
                  "src": "1654:198:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [10],
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2094:64:1",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 138,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 132,
                            "src": "2111:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 140,
                                  "name": "IERC165",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11,
                                  "src": "2131:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC165_$11_$",
                                    "typeString": "type(contract IERC165)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IERC165_$11_$",
                                    "typeString": "type(contract IERC165)"
                                  }
                                ],
                                "id": 139,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "2126:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2126:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$11",
                                "typeString": "type(contract IERC165)"
                              }
                            },
                            "id": 142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2140:11:1",
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "2126:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "2111:40:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 137,
                        "id": 144,
                        "nodeType": "Return",
                        "src": "2104:47:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 130,
                    "nodeType": "StructuredDocumentation",
                    "src": "1858:148:1",
                    "text": " @notice Interface support check\n @param interfaceId Interface identifier\n @return bool True if interface is supported"
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "2020:17:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 134,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2070:8:1"
                  },
                  "parameters": {
                    "id": 133,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 132,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "2045:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2038:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 131,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2038:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2037:20:1"
                  },
                  "returnParameters": {
                    "id": 137,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 136,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2088:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 135,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2088:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2087:6:1"
                  },
                  "scope": 147,
                  "src": "2011:147:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 174,
              "src": "340:1820:1",
              "usedErrors": [222, 227],
              "usedEvents": [24, 30]
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 149,
                    "name": "SimpleVaultBeacon",
                    "nameLocations": ["2302:17:1"],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "2302:17:1"
                  },
                  "id": 150,
                  "nodeType": "InheritanceSpecifier",
                  "src": "2302:17:1"
                }
              ],
              "canonicalName": "SimpleERC721VaultBeacon",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 148,
                "nodeType": "StructuredDocumentation",
                "src": "2162:103:1",
                "text": " @title SimpleERC721VaultBeacon\n @notice Simplified beacon for ERC721 vault implementations"
              },
              "fullyImplemented": true,
              "id": 160,
              "linearizedBaseContracts": [160, 147, 11],
              "name": "SimpleERC721VaultBeacon",
              "nameLocation": "2275:23:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 158,
                    "nodeType": "Block",
                    "src": "2398:2:1",
                    "statements": []
                  },
                  "id": 159,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 155,
                          "name": "_implementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 152,
                          "src": "2381:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 156,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 154,
                        "name": "SimpleVaultBeacon",
                        "nameLocations": ["2363:17:1"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "2363:17:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2363:34:1"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 153,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 152,
                        "mutability": "mutable",
                        "name": "_implementation",
                        "nameLocation": "2346:15:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "2338:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 151,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2338:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2337:25:1"
                  },
                  "returnParameters": {
                    "id": 157,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2398:0:1"
                  },
                  "scope": 160,
                  "src": "2326:74:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 174,
              "src": "2266:136:1",
              "usedErrors": [222, 227],
              "usedEvents": [24, 30]
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 162,
                    "name": "SimpleVaultBeacon",
                    "nameLocations": ["2547:17:1"],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "2547:17:1"
                  },
                  "id": 163,
                  "nodeType": "InheritanceSpecifier",
                  "src": "2547:17:1"
                }
              ],
              "canonicalName": "SimpleERC1155VaultBeacon",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 161,
                "nodeType": "StructuredDocumentation",
                "src": "2404:105:1",
                "text": " @title SimpleERC1155VaultBeacon\n @notice Simplified beacon for ERC1155 vault implementations"
              },
              "fullyImplemented": true,
              "id": 173,
              "linearizedBaseContracts": [173, 147, 11],
              "name": "SimpleERC1155VaultBeacon",
              "nameLocation": "2519:24:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 171,
                    "nodeType": "Block",
                    "src": "2643:2:1",
                    "statements": []
                  },
                  "id": 172,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 168,
                          "name": "_implementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 165,
                          "src": "2626:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 169,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 167,
                        "name": "SimpleVaultBeacon",
                        "nameLocations": ["2608:17:1"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "2608:17:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2608:34:1"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 166,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 165,
                        "mutability": "mutable",
                        "name": "_implementation",
                        "nameLocation": "2591:15:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 172,
                        "src": "2583:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 164,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2583:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2582:25:1"
                  },
                  "returnParameters": {
                    "id": 170,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2643:0:1"
                  },
                  "scope": 173,
                  "src": "2571:74:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 174,
              "src": "2510:137:1",
              "usedErrors": [222, 227],
              "usedEvents": [24, 30]
            }
          ],
          "src": "32:2616:1"
        },
        "id": 1
      },
      "src/libraries/LibErrors.sol": {
        "ast": {
          "absolutePath": "src/libraries/LibErrors.sol",
          "exportedSymbols": { "LibErrors": [753] },
          "id": 754,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 175,
              "literals": ["solidity", "^", "0.8", ".19"],
              "nodeType": "PragmaDirective",
              "src": "32:24:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "LibErrors",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 176,
                "nodeType": "StructuredDocumentation",
                "src": "58:134:2",
                "text": "@title LibErrors\n @notice Library for centralized error definitions\n @dev Contains all custom errors used across the system"
              },
              "fullyImplemented": true,
              "id": 753,
              "linearizedBaseContracts": [753],
              "name": "LibErrors",
              "nameLocation": "200:9:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 177,
                    "nodeType": "StructuredDocumentation",
                    "src": "265:48:2",
                    "text": "@notice Function does not exist in any facet"
                  },
                  "errorSelector": "5416eb98",
                  "id": 181,
                  "name": "FunctionNotFound",
                  "nameLocation": "324:16:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 180,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 179,
                        "mutability": "mutable",
                        "name": "selector",
                        "nameLocation": "348:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 181,
                        "src": "341:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 178,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "341:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "340:17:2"
                  },
                  "src": "318:40:2"
                },
                {
                  "documentation": {
                    "id": 182,
                    "nodeType": "StructuredDocumentation",
                    "src": "364:52:2",
                    "text": "@notice Initialization failed during diamond cut"
                  },
                  "errorSelector": "ab3be7dc",
                  "id": 188,
                  "name": "DiamondInitFailed",
                  "nameLocation": "427:17:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 187,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 184,
                        "mutability": "mutable",
                        "name": "initContract",
                        "nameLocation": "453:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 188,
                        "src": "445:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 183,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "445:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 186,
                        "mutability": "mutable",
                        "name": "initData",
                        "nameLocation": "473:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 188,
                        "src": "467:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 185,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "467:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "444:38:2"
                  },
                  "src": "421:62:2"
                },
                {
                  "documentation": {
                    "id": 189,
                    "nodeType": "StructuredDocumentation",
                    "src": "489:45:2",
                    "text": "@notice Invalid facet cut action provided"
                  },
                  "errorSelector": "32191c29",
                  "id": 193,
                  "name": "InvalidFacetCutAction",
                  "nameLocation": "545:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 192,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 191,
                        "mutability": "mutable",
                        "name": "action",
                        "nameLocation": "573:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 193,
                        "src": "567:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 190,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "567:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "566:14:2"
                  },
                  "src": "539:42:2"
                },
                {
                  "documentation": {
                    "id": 194,
                    "nodeType": "StructuredDocumentation",
                    "src": "587:61:2",
                    "text": "@notice Function already exists and cannot be added again"
                  },
                  "errorSelector": "cf24d10c",
                  "id": 198,
                  "name": "FunctionAlreadyExists",
                  "nameLocation": "659:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 197,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 196,
                        "mutability": "mutable",
                        "name": "selector",
                        "nameLocation": "688:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 198,
                        "src": "681:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 195,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "681:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "680:17:2"
                  },
                  "src": "653:45:2"
                },
                {
                  "documentation": {
                    "id": 199,
                    "nodeType": "StructuredDocumentation",
                    "src": "704:65:2",
                    "text": "@notice Function doesn't exist and cannot be replaced/removed"
                  },
                  "errorSelector": "f8473e6b",
                  "id": 203,
                  "name": "FunctionDoesNotExist",
                  "nameLocation": "780:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "selector",
                        "nameLocation": "808:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 203,
                        "src": "801:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "801:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "800:17:2"
                  },
                  "src": "774:44:2"
                },
                {
                  "documentation": {
                    "id": 204,
                    "nodeType": "StructuredDocumentation",
                    "src": "824:54:2",
                    "text": "@notice Cannot replace function with same function"
                  },
                  "errorSelector": "d75522e2",
                  "id": 208,
                  "name": "CannotReplaceSameFunction",
                  "nameLocation": "889:25:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 207,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 206,
                        "mutability": "mutable",
                        "name": "selector",
                        "nameLocation": "922:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 208,
                        "src": "915:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 205,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "915:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "914:17:2"
                  },
                  "src": "883:49:2"
                },
                {
                  "documentation": {
                    "id": 209,
                    "nodeType": "StructuredDocumentation",
                    "src": "938:45:2",
                    "text": "@notice Invalid initialization parameters"
                  },
                  "errorSelector": "f92ee8a9",
                  "id": 211,
                  "name": "InvalidInitialization",
                  "nameLocation": "994:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 210,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1015:2:2"
                  },
                  "src": "988:30:2"
                },
                {
                  "documentation": {
                    "id": 212,
                    "nodeType": "StructuredDocumentation",
                    "src": "1024:47:2",
                    "text": "@notice Initialization contract has no code"
                  },
                  "errorSelector": "fd0380c1",
                  "id": 216,
                  "name": "InitializationContractEmpty",
                  "nameLocation": "1082:27:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 215,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 214,
                        "mutability": "mutable",
                        "name": "initContract",
                        "nameLocation": "1118:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "1110:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 213,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1110:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1109:22:2"
                  },
                  "src": "1076:56:2"
                },
                {
                  "documentation": {
                    "id": 217,
                    "nodeType": "StructuredDocumentation",
                    "src": "1138:32:2",
                    "text": "@notice Delegate call failed"
                  },
                  "errorSelector": "18cecad5",
                  "id": 219,
                  "name": "DelegateCallFailed",
                  "nameLocation": "1181:18:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 218,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1199:2:2"
                  },
                  "src": "1175:27:2"
                },
                {
                  "documentation": {
                    "id": 220,
                    "nodeType": "StructuredDocumentation",
                    "src": "1256:70:2",
                    "text": "@notice Zero address provided where a non-zero address is required"
                  },
                  "errorSelector": "d92e233d",
                  "id": 222,
                  "name": "ZeroAddress",
                  "nameLocation": "1337:11:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 221,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1348:2:2"
                  },
                  "src": "1331:20:2"
                },
                {
                  "documentation": {
                    "id": 223,
                    "nodeType": "StructuredDocumentation",
                    "src": "1357:44:2",
                    "text": "@notice Operation attempted by non-owner"
                  },
                  "errorSelector": "8e4a23d6",
                  "id": 227,
                  "name": "Unauthorized",
                  "nameLocation": "1412:12:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 226,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 225,
                        "mutability": "mutable",
                        "name": "caller",
                        "nameLocation": "1433:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 227,
                        "src": "1425:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1425:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1424:16:2"
                  },
                  "src": "1406:35:2"
                },
                {
                  "documentation": {
                    "id": 228,
                    "nodeType": "StructuredDocumentation",
                    "src": "1447:47:2",
                    "text": "@notice Invalid collection address provided"
                  },
                  "errorSelector": "bf29a5e5",
                  "id": 232,
                  "name": "InvalidCollection",
                  "nameLocation": "1505:17:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 231,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 230,
                        "mutability": "mutable",
                        "name": "collection",
                        "nameLocation": "1531:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 232,
                        "src": "1523:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 229,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1523:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1522:20:2"
                  },
                  "src": "1499:44:2"
                },
                {
                  "documentation": {
                    "id": 233,
                    "nodeType": "StructuredDocumentation",
                    "src": "1549:38:2",
                    "text": "@notice Factory not set in storage"
                  },
                  "errorSelector": "a7df7fac",
                  "id": 235,
                  "name": "FactoryNotSet",
                  "nameLocation": "1598:13:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 234,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1611:2:2"
                  },
                  "src": "1592:22:2"
                },
                {
                  "documentation": {
                    "id": 236,
                    "nodeType": "StructuredDocumentation",
                    "src": "1620:37:2",
                    "text": "@notice Transfer operation failed"
                  },
                  "errorSelector": "90b8ec18",
                  "id": 238,
                  "name": "TransferFailed",
                  "nameLocation": "1668:14:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 237,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1682:2:2"
                  },
                  "src": "1662:23:2"
                },
                {
                  "documentation": {
                    "id": 239,
                    "nodeType": "StructuredDocumentation",
                    "src": "1691:43:2",
                    "text": "@notice Invalid implementation contract"
                  },
                  "errorSelector": "68155f9a",
                  "id": 241,
                  "name": "InvalidImplementation",
                  "nameLocation": "1745:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 240,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1766:2:2"
                  },
                  "src": "1739:30:2"
                },
                {
                  "documentation": {
                    "id": 242,
                    "nodeType": "StructuredDocumentation",
                    "src": "1827:44:2",
                    "text": "@notice Invalid collection type provided"
                  },
                  "errorSelector": "134da98e",
                  "id": 246,
                  "name": "InvalidCollectionType",
                  "nameLocation": "1882:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 245,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 244,
                        "mutability": "mutable",
                        "name": "collectionType",
                        "nameLocation": "1910:14:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 246,
                        "src": "1904:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 243,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1904:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1903:22:2"
                  },
                  "src": "1876:50:2"
                },
                {
                  "documentation": {
                    "id": 247,
                    "nodeType": "StructuredDocumentation",
                    "src": "1932:49:2",
                    "text": "@notice Invalid operation for collection type"
                  },
                  "errorSelector": "1e79551c",
                  "id": 251,
                  "name": "InvalidCollectionOperation",
                  "nameLocation": "1992:26:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 250,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 249,
                        "mutability": "mutable",
                        "name": "collection",
                        "nameLocation": "2027:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 251,
                        "src": "2019:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 248,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2019:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2018:20:2"
                  },
                  "src": "1986:53:2"
                },
                {
                  "documentation": {
                    "id": 252,
                    "nodeType": "StructuredDocumentation",
                    "src": "2045:43:2",
                    "text": "@notice Not the owner of the collection"
                  },
                  "errorSelector": "9f2be066",
                  "id": 258,
                  "name": "NotCollectionOwner",
                  "nameLocation": "2099:18:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 257,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 254,
                        "mutability": "mutable",
                        "name": "collection",
                        "nameLocation": "2126:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 258,
                        "src": "2118:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 253,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2118:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 256,
                        "mutability": "mutable",
                        "name": "caller",
                        "nameLocation": "2146:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 258,
                        "src": "2138:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 255,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2138:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2117:36:2"
                  },
                  "src": "2093:61:2"
                },
                {
                  "documentation": {
                    "id": 259,
                    "nodeType": "StructuredDocumentation",
                    "src": "2213:35:2",
                    "text": "@notice Vault is already locked"
                  },
                  "errorSelector": "f9515879",
                  "id": 265,
                  "name": "VaultAlreadyLocked",
                  "nameLocation": "2259:18:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 264,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 261,
                        "mutability": "mutable",
                        "name": "collection",
                        "nameLocation": "2286:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 265,
                        "src": "2278:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 260,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2278:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 263,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2306:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 265,
                        "src": "2298:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 262,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2298:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2277:37:2"
                  },
                  "src": "2253:62:2"
                },
                {
                  "documentation": {
                    "id": 266,
                    "nodeType": "StructuredDocumentation",
                    "src": "2321:31:2",
                    "text": "@notice Vault is not locked"
                  },
                  "errorSelector": "c5e949be",
                  "id": 272,
                  "name": "VaultNotLocked",
                  "nameLocation": "2363:14:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 271,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 268,
                        "mutability": "mutable",
                        "name": "collection",
                        "nameLocation": "2386:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 272,
                        "src": "2378:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 267,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2378:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 270,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2406:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 272,
                        "src": "2398:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 269,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2398:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2377:37:2"
                  },
                  "src": "2357:58:2"
                },
                {
                  "documentation": {
                    "id": 273,
                    "nodeType": "StructuredDocumentation",
                    "src": "2421:36:2",
                    "text": "@notice Vault owner check failed"
                  },
                  "errorSelector": "47256793",
                  "id": 281,
                  "name": "NotVaultOwner",
                  "nameLocation": "2468:13:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 280,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 275,
                        "mutability": "mutable",
                        "name": "collection",
                        "nameLocation": "2490:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 281,
                        "src": "2482:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 274,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2482:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 277,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2510:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 281,
                        "src": "2502:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 276,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2502:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 279,
                        "mutability": "mutable",
                        "name": "caller",
                        "nameLocation": "2527:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 281,
                        "src": "2519:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 278,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2519:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2481:53:2"
                  },
                  "src": "2462:73:2"
                },
                {
                  "documentation": {
                    "id": 282,
                    "nodeType": "StructuredDocumentation",
                    "src": "2590:34:2",
                    "text": "@notice Witness already exists"
                  },
                  "errorSelector": "96be6d9a",
                  "id": 286,
                  "name": "WitnessAlreadyExists",
                  "nameLocation": "2635:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 285,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 284,
                        "mutability": "mutable",
                        "name": "witness",
                        "nameLocation": "2664:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 286,
                        "src": "2656:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 283,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2655:17:2"
                  },
                  "src": "2629:44:2"
                },
                {
                  "documentation": {
                    "id": 287,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:34:2",
                    "text": "@notice Witness does not exist"
                  },
                  "errorSelector": "ce167778",
                  "id": 291,
                  "name": "WitnessDoesNotExist",
                  "nameLocation": "2724:19:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 290,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 289,
                        "mutability": "mutable",
                        "name": "witness",
                        "nameLocation": "2752:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 291,
                        "src": "2744:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 288,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2744:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2743:17:2"
                  },
                  "src": "2718:43:2"
                },
                {
                  "documentation": {
                    "id": 292,
                    "nodeType": "StructuredDocumentation",
                    "src": "2767:34:2",
                    "text": "@notice No witnesses remaining"
                  },
                  "errorSelector": "2bdab24c",
                  "id": 294,
                  "name": "NoWitnessesRemaining",
                  "nameLocation": "2812:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 293,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2832:2:2"
                  },
                  "src": "2806:29:2"
                },
                {
                  "documentation": {
                    "id": 295,
                    "nodeType": "StructuredDocumentation",
                    "src": "2841:25:2",
                    "text": "@notice Not a witness"
                  },
                  "errorSelector": "effceea4",
                  "id": 299,
                  "name": "NotWitness",
                  "nameLocation": "2877:10:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 298,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 297,
                        "mutability": "mutable",
                        "name": "caller",
                        "nameLocation": "2896:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 299,
                        "src": "2888:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 296,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2888:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2887:16:2"
                  },
                  "src": "2871:33:2"
                },
                {
                  "documentation": {
                    "id": 300,
                    "nodeType": "StructuredDocumentation",
                    "src": "2961:38:2",
                    "text": "@notice Invalid signature provided"
                  },
                  "errorSelector": "8baa579f",
                  "id": 302,
                  "name": "InvalidSignature",
                  "nameLocation": "3010:16:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 301,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3026:2:2"
                  },
                  "src": "3004:25:2"
                },
                {
                  "documentation": {
                    "id": 303,
                    "nodeType": "StructuredDocumentation",
                    "src": "3035:30:2",
                    "text": "@notice Nonce already used"
                  },
                  "errorSelector": "91cab504",
                  "id": 307,
                  "name": "NonceAlreadyUsed",
                  "nameLocation": "3076:16:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 306,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 305,
                        "mutability": "mutable",
                        "name": "nonce",
                        "nameLocation": "3101:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 307,
                        "src": "3093:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 304,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3093:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3092:15:2"
                  },
                  "src": "3070:38:2"
                },
                {
                  "documentation": {
                    "id": 308,
                    "nodeType": "StructuredDocumentation",
                    "src": "3163:38:2",
                    "text": "@notice Unvaulter contract not set"
                  },
                  "errorSelector": "48175c72",
                  "id": 310,
                  "name": "UnvaulterNotSet",
                  "nameLocation": "3212:15:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 309,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3227:2:2"
                  },
                  "src": "3206:24:2"
                },
                {
                  "documentation": {
                    "id": 311,
                    "nodeType": "StructuredDocumentation",
                    "src": "3236:35:2",
                    "text": "@notice Token already unvaulted"
                  },
                  "errorSelector": "0db92221",
                  "id": 317,
                  "name": "AlreadyUnvaulted",
                  "nameLocation": "3282:16:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 316,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 313,
                        "mutability": "mutable",
                        "name": "collection",
                        "nameLocation": "3307:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "3299:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 312,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3299:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 315,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3327:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "3319:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 314,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3319:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3298:37:2"
                  },
                  "src": "3276:60:2"
                },
                {
                  "documentation": {
                    "id": 318,
                    "nodeType": "StructuredDocumentation",
                    "src": "3342:33:2",
                    "text": "@notice Burn operation failed"
                  },
                  "errorSelector": "016f84a1",
                  "id": 324,
                  "name": "BurnFailed",
                  "nameLocation": "3386:10:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 323,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 320,
                        "mutability": "mutable",
                        "name": "collection",
                        "nameLocation": "3405:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 324,
                        "src": "3397:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 319,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3397:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 322,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3425:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 324,
                        "src": "3417:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 321,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3417:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3396:37:2"
                  },
                  "src": "3380:54:2"
                },
                {
                  "documentation": {
                    "id": 325,
                    "nodeType": "StructuredDocumentation",
                    "src": "3486:33:2",
                    "text": "@notice Mint operation failed"
                  },
                  "errorSelector": "5c0b206f",
                  "id": 331,
                  "name": "MintFailed",
                  "nameLocation": "3530:10:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 330,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 327,
                        "mutability": "mutable",
                        "name": "collection",
                        "nameLocation": "3549:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 331,
                        "src": "3541:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 326,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3541:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 329,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3569:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 331,
                        "src": "3561:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 328,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3561:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3540:37:2"
                  },
                  "src": "3524:54:2"
                },
                {
                  "documentation": {
                    "id": 332,
                    "nodeType": "StructuredDocumentation",
                    "src": "3584:35:2",
                    "text": "@notice Invalid amount provided"
                  },
                  "errorSelector": "3728b83d",
                  "id": 336,
                  "name": "InvalidAmount",
                  "nameLocation": "3630:13:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 335,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 334,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3652:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 336,
                        "src": "3644:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 333,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3644:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3643:16:2"
                  },
                  "src": "3624:36:2"
                },
                {
                  "documentation": {
                    "id": 337,
                    "nodeType": "StructuredDocumentation",
                    "src": "3666:41:2",
                    "text": "@notice Price out of acceptable range"
                  },
                  "errorSelector": "32aa6024",
                  "id": 345,
                  "name": "PriceOutOfRange",
                  "nameLocation": "3718:15:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 344,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 339,
                        "mutability": "mutable",
                        "name": "provided",
                        "nameLocation": "3742:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "3734:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 338,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3734:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 341,
                        "mutability": "mutable",
                        "name": "expected",
                        "nameLocation": "3760:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "3752:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 340,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3752:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 343,
                        "mutability": "mutable",
                        "name": "tolerance",
                        "nameLocation": "3778:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "3770:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 342,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3770:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3733:55:2"
                  },
                  "src": "3712:77:2"
                },
                {
                  "documentation": {
                    "id": 346,
                    "nodeType": "StructuredDocumentation",
                    "src": "3795:28:2",
                    "text": "@notice Invalid token ID"
                  },
                  "errorSelector": "ed15e6cf",
                  "id": 350,
                  "name": "InvalidTokenId",
                  "nameLocation": "3834:14:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 348,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3857:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 350,
                        "src": "3849:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3849:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3848:17:2"
                  },
                  "src": "3828:38:2"
                },
                {
                  "documentation": {
                    "id": 351,
                    "nodeType": "StructuredDocumentation",
                    "src": "3872:36:2",
                    "text": "@notice Incorrect payment amount"
                  },
                  "errorSelector": "0d35e921",
                  "id": 357,
                  "name": "IncorrectPayment",
                  "nameLocation": "3919:16:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 356,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 353,
                        "mutability": "mutable",
                        "name": "provided",
                        "nameLocation": "3944:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 357,
                        "src": "3936:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 352,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3936:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 355,
                        "mutability": "mutable",
                        "name": "expected",
                        "nameLocation": "3962:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 357,
                        "src": "3954:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 354,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3954:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3935:36:2"
                  },
                  "src": "3913:59:2"
                },
                {
                  "documentation": {
                    "id": 358,
                    "nodeType": "StructuredDocumentation",
                    "src": "3978:31:2",
                    "text": "@notice Eth transfer failed"
                  },
                  "errorSelector": "b12d13eb",
                  "id": 360,
                  "name": "ETHTransferFailed",
                  "nameLocation": "4020:17:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 359,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4037:2:2"
                  },
                  "src": "4014:26:2"
                },
                {
                  "documentation": {
                    "id": 361,
                    "nodeType": "StructuredDocumentation",
                    "src": "4046:33:2",
                    "text": "@notice Array length mismatch"
                  },
                  "errorSelector": "ab8b67c6",
                  "id": 367,
                  "name": "LengthMismatch",
                  "nameLocation": "4090:14:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 366,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 363,
                        "mutability": "mutable",
                        "name": "length1",
                        "nameLocation": "4113:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 367,
                        "src": "4105:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 362,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4105:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 365,
                        "mutability": "mutable",
                        "name": "length2",
                        "nameLocation": "4130:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 367,
                        "src": "4122:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 364,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4122:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4104:34:2"
                  },
                  "src": "4084:55:2"
                },
                {
                  "documentation": {
                    "id": 368,
                    "nodeType": "StructuredDocumentation",
                    "src": "4145:36:2",
                    "text": "@notice Batch size exceeds limit"
                  },
                  "errorSelector": "f80a4845",
                  "id": 374,
                  "name": "BatchSizeExceeded",
                  "nameLocation": "4192:17:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 373,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 370,
                        "mutability": "mutable",
                        "name": "size",
                        "nameLocation": "4218:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 374,
                        "src": "4210:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 369,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4210:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 372,
                        "mutability": "mutable",
                        "name": "limit",
                        "nameLocation": "4232:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 374,
                        "src": "4224:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 371,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4224:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4209:29:2"
                  },
                  "src": "4186:53:2"
                },
                {
                  "documentation": {
                    "id": 375,
                    "nodeType": "StructuredDocumentation",
                    "src": "4245:51:2",
                    "text": "@notice Recipient address does not match sender"
                  },
                  "errorSelector": "9c8d2cd2",
                  "id": 377,
                  "name": "InvalidRecipient",
                  "nameLocation": "4307:16:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4323:2:2"
                  },
                  "src": "4301:25:2"
                },
                {
                  "documentation": {
                    "id": 378,
                    "nodeType": "StructuredDocumentation",
                    "src": "4332:58:2",
                    "text": "@notice Number of serial numbers does not match amount"
                  },
                  "errorSelector": "8def7944",
                  "id": 380,
                  "name": "InvalidSerialNumbersCount",
                  "nameLocation": "4401:25:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 379,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4426:2:2"
                  },
                  "src": "4395:34:2"
                },
                {
                  "documentation": {
                    "id": 381,
                    "nodeType": "StructuredDocumentation",
                    "src": "4435:47:2",
                    "text": "@notice Required interface is not supported"
                  },
                  "errorSelector": "4586348c",
                  "id": 387,
                  "name": "InterfaceNotSupported",
                  "nameLocation": "4493:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 386,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 383,
                        "mutability": "mutable",
                        "name": "contractAddress",
                        "nameLocation": "4523:15:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 387,
                        "src": "4515:23:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 382,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4515:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 385,
                        "mutability": "mutable",
                        "name": "interfaceName",
                        "nameLocation": "4547:13:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 387,
                        "src": "4540:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 384,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4540:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4514:47:2"
                  },
                  "src": "4487:75:2"
                },
                {
                  "documentation": {
                    "id": 388,
                    "nodeType": "StructuredDocumentation",
                    "src": "4624:31:2",
                    "text": "@notice Already initialized"
                  },
                  "errorSelector": "0dc149f0",
                  "id": 390,
                  "name": "AlreadyInitialized",
                  "nameLocation": "4666:18:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 389,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4684:2:2"
                  },
                  "src": "4660:27:2"
                },
                {
                  "documentation": {
                    "id": 391,
                    "nodeType": "StructuredDocumentation",
                    "src": "4693:33:2",
                    "text": "@notice Initialization failed"
                  },
                  "errorSelector": "19b991a8",
                  "id": 393,
                  "name": "InitializationFailed",
                  "nameLocation": "4737:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 392,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4757:2:2"
                  },
                  "src": "4731:29:2"
                },
                {
                  "body": {
                    "id": 409,
                    "nodeType": "Block",
                    "src": "4913:61:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 399,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 396,
                            "src": "4927:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4943:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4935:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 400,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4935:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4935:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4927:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 408,
                        "nodeType": "IfStatement",
                        "src": "4923:44:2",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 405,
                              "name": "ZeroAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
                              "src": "4954:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4954:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 407,
                          "nodeType": "RevertStatement",
                          "src": "4947:20:2"
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 394,
                    "nodeType": "StructuredDocumentation",
                    "src": "4817:34:2",
                    "text": "@notice Check for zero address"
                  },
                  "id": 410,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revertIfZeroAddress",
                  "nameLocation": "4865:19:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 397,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 396,
                        "mutability": "mutable",
                        "name": "addr",
                        "nameLocation": "4893:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 410,
                        "src": "4885:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 395,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4885:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4884:14:2"
                  },
                  "returnParameters": {
                    "id": 398,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4913:0:2"
                  },
                  "scope": 753,
                  "src": "4856:118:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 425,
                    "nodeType": "Block",
                    "src": "5106:67:2",
                    "statements": [
                      {
                        "condition": {
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "5120:8:2",
                          "subExpression": {
                            "id": 418,
                            "name": "isValid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 415,
                            "src": "5121:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 424,
                        "nodeType": "IfStatement",
                        "src": "5116:50:2",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 421,
                                "name": "collection",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 413,
                                "src": "5155:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 420,
                              "name": "InvalidCollection",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 232,
                              "src": "5137:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                "typeString": "function (address) pure returns (error)"
                              }
                            },
                            "id": 422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5137:29:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 423,
                          "nodeType": "RevertStatement",
                          "src": "5130:36:2"
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 411,
                    "nodeType": "StructuredDocumentation",
                    "src": "4980:38:2",
                    "text": "@notice Check for valid collection"
                  },
                  "id": 426,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revertIfInvalidCollection",
                  "nameLocation": "5032:25:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 416,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 413,
                        "mutability": "mutable",
                        "name": "collection",
                        "nameLocation": "5066:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "5058:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 412,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5058:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 415,
                        "mutability": "mutable",
                        "name": "isValid",
                        "nameLocation": "5083:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "5078:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 414,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5078:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5057:34:2"
                  },
                  "returnParameters": {
                    "id": 417,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5106:0:2"
                  },
                  "scope": 753,
                  "src": "5023:150:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 442,
                    "nodeType": "Block",
                    "src": "5275:66:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 432,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 429,
                            "src": "5289:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 435,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5308:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 434,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5300:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 433,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5300:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5300:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5289:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 441,
                        "nodeType": "IfStatement",
                        "src": "5285:49:2",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 438,
                              "name": "FactoryNotSet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 235,
                              "src": "5319:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5319:15:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 440,
                          "nodeType": "RevertStatement",
                          "src": "5312:22:2"
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 427,
                    "nodeType": "StructuredDocumentation",
                    "src": "5179:29:2",
                    "text": "@notice Check for factory"
                  },
                  "id": 443,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revertIfFactoryNotSet",
                  "nameLocation": "5222:21:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 430,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 429,
                        "mutability": "mutable",
                        "name": "factory",
                        "nameLocation": "5252:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 443,
                        "src": "5244:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5244:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5243:17:2"
                  },
                  "returnParameters": {
                    "id": 431,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5275:0:2"
                  },
                  "scope": 753,
                  "src": "5213:128:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 460,
                    "nodeType": "Block",
                    "src": "5507:77:2",
                    "statements": [
                      {
                        "condition": {
                          "id": 453,
                          "name": "isLocked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 450,
                          "src": "5521:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 459,
                        "nodeType": "IfStatement",
                        "src": "5517:60:2",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 455,
                                "name": "collection",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 446,
                                "src": "5557:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 456,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 448,
                                "src": "5569:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 454,
                              "name": "VaultAlreadyLocked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 265,
                              "src": "5538:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
                                "typeString": "function (address,uint256) pure returns (error)"
                              }
                            },
                            "id": 457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5538:39:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 458,
                          "nodeType": "RevertStatement",
                          "src": "5531:46:2"
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 444,
                    "nodeType": "StructuredDocumentation",
                    "src": "5347:38:2",
                    "text": "@notice Check for vault lock state"
                  },
                  "id": 461,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revertIfAlreadyLocked",
                  "nameLocation": "5399:21:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 451,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 446,
                        "mutability": "mutable",
                        "name": "collection",
                        "nameLocation": "5429:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 461,
                        "src": "5421:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 445,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5421:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 448,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "5449:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 461,
                        "src": "5441:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 447,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5441:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 450,
                        "mutability": "mutable",
                        "name": "isLocked",
                        "nameLocation": "5463:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 461,
                        "src": "5458:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 449,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5458:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5420:52:2"
                  },
                  "returnParameters": {
                    "id": 452,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5507:0:2"
                  },
                  "scope": 753,
                  "src": "5390:194:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 479,
                    "nodeType": "Block",
                    "src": "5728:74:2",
                    "statements": [
                      {
                        "condition": {
                          "id": 472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "5742:9:2",
                          "subExpression": {
                            "id": 471,
                            "name": "isLocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 468,
                            "src": "5743:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 478,
                        "nodeType": "IfStatement",
                        "src": "5738:57:2",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 474,
                                "name": "collection",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 464,
                                "src": "5775:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 475,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 466,
                                "src": "5787:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 473,
                              "name": "VaultNotLocked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 272,
                              "src": "5760:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
                                "typeString": "function (address,uint256) pure returns (error)"
                              }
                            },
                            "id": 476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5760:35:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 477,
                          "nodeType": "RevertStatement",
                          "src": "5753:42:2"
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 462,
                    "nodeType": "StructuredDocumentation",
                    "src": "5590:40:2",
                    "text": "@notice Check for vault unlock state"
                  },
                  "id": 480,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revertIfNotLocked",
                  "nameLocation": "5644:17:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 469,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 464,
                        "mutability": "mutable",
                        "name": "collection",
                        "nameLocation": "5670:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "5662:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 463,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5662:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 466,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "5690:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "5682:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 465,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5682:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 468,
                        "mutability": "mutable",
                        "name": "isLocked",
                        "nameLocation": "5704:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "5699:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 467,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5699:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5661:52:2"
                  },
                  "returnParameters": {
                    "id": 470,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5728:0:2"
                  },
                  "scope": 753,
                  "src": "5635:167:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 495,
                    "nodeType": "Block",
                    "src": "5923:58:2",
                    "statements": [
                      {
                        "condition": {
                          "id": 489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "5937:10:2",
                          "subExpression": {
                            "id": 488,
                            "name": "isWitness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 485,
                            "src": "5938:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 494,
                        "nodeType": "IfStatement",
                        "src": "5933:41:2",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 491,
                                "name": "caller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 483,
                                "src": "5967:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 490,
                              "name": "NotWitness",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "5956:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                "typeString": "function (address) pure returns (error)"
                              }
                            },
                            "id": 492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5956:18:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 493,
                          "nodeType": "RevertStatement",
                          "src": "5949:25:2"
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 481,
                    "nodeType": "StructuredDocumentation",
                    "src": "5808:36:2",
                    "text": "@notice Check for witness status"
                  },
                  "id": 496,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revertIfNotWitness",
                  "nameLocation": "5858:18:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 486,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 483,
                        "mutability": "mutable",
                        "name": "caller",
                        "nameLocation": "5885:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 496,
                        "src": "5877:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 482,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5877:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 485,
                        "mutability": "mutable",
                        "name": "isWitness",
                        "nameLocation": "5898:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 496,
                        "src": "5893:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 484,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5893:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5876:32:2"
                  },
                  "returnParameters": {
                    "id": 487,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5923:0:2"
                  },
                  "scope": 753,
                  "src": "5849:132:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 513,
                    "nodeType": "Block",
                    "src": "6113:86:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 504,
                            "name": "provided",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 499,
                            "src": "6127:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 505,
                            "name": "expected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 501,
                            "src": "6139:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6127:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 512,
                        "nodeType": "IfStatement",
                        "src": "6123:69:2",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 508,
                                "name": "provided",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 499,
                                "src": "6173:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 509,
                                "name": "expected",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 501,
                                "src": "6183:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 507,
                              "name": "IncorrectPayment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 357,
                              "src": "6156:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                "typeString": "function (uint256,uint256) pure returns (error)"
                              }
                            },
                            "id": 510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6156:36:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 511,
                          "nodeType": "RevertStatement",
                          "src": "6149:43:2"
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 497,
                    "nodeType": "StructuredDocumentation",
                    "src": "5987:37:2",
                    "text": "@notice Check for correct payment"
                  },
                  "id": 514,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revertIfIncorrectPayment",
                  "nameLocation": "6038:24:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 502,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 499,
                        "mutability": "mutable",
                        "name": "provided",
                        "nameLocation": "6071:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 514,
                        "src": "6063:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 498,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6063:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 501,
                        "mutability": "mutable",
                        "name": "expected",
                        "nameLocation": "6089:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 514,
                        "src": "6081:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 500,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6081:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6062:36:2"
                  },
                  "returnParameters": {
                    "id": 503,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6113:0:2"
                  },
                  "scope": 753,
                  "src": "6029:170:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 531,
                    "nodeType": "Block",
                    "src": "6335:85:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 522,
                            "name": "provided",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 517,
                            "src": "6349:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 523,
                            "name": "expected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 519,
                            "src": "6360:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6349:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 530,
                        "nodeType": "IfStatement",
                        "src": "6345:68:2",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 526,
                                "name": "provided",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 517,
                                "src": "6394:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 527,
                                "name": "expected",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 519,
                                "src": "6404:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 525,
                              "name": "IncorrectPayment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 357,
                              "src": "6377:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                "typeString": "function (uint256,uint256) pure returns (error)"
                              }
                            },
                            "id": 528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6377:36:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 529,
                          "nodeType": "RevertStatement",
                          "src": "6370:43:2"
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 515,
                    "nodeType": "StructuredDocumentation",
                    "src": "6205:42:2",
                    "text": "@notice Check for insufficient payment"
                  },
                  "id": 532,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revertIfInsufficientETH",
                  "nameLocation": "6261:23:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 520,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 517,
                        "mutability": "mutable",
                        "name": "provided",
                        "nameLocation": "6293:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 532,
                        "src": "6285:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 516,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6285:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 519,
                        "mutability": "mutable",
                        "name": "expected",
                        "nameLocation": "6311:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 532,
                        "src": "6303:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 518,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6303:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6284:36:2"
                  },
                  "returnParameters": {
                    "id": 521,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6335:0:2"
                  },
                  "scope": 753,
                  "src": "6252:168:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 561,
                    "nodeType": "Block",
                    "src": "6586:166:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 542,
                              "name": "provided",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 535,
                              "src": "6600:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 543,
                                "name": "expected",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 537,
                                "src": "6611:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 544,
                                "name": "tolerance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 539,
                                "src": "6622:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6611:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6600:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 547,
                              "name": "provided",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 535,
                              "src": "6635:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 550,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 548,
                                "name": "expected",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 537,
                                "src": "6646:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 549,
                                "name": "tolerance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 539,
                                "src": "6657:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6646:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6635:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6600:66:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 560,
                        "nodeType": "IfStatement",
                        "src": "6596:150:2",
                        "trueBody": {
                          "id": 559,
                          "nodeType": "Block",
                          "src": "6668:78:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 554,
                                    "name": "provided",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 535,
                                    "src": "6705:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 555,
                                    "name": "expected",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 537,
                                    "src": "6715:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 556,
                                    "name": "tolerance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 539,
                                    "src": "6725:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 553,
                                  "name": "PriceOutOfRange",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 345,
                                  "src": "6689:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                    "typeString": "function (uint256,uint256,uint256) pure returns (error)"
                                  }
                                },
                                "id": 557,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6689:46:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 558,
                              "nodeType": "RevertStatement",
                              "src": "6682:53:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 533,
                    "nodeType": "StructuredDocumentation",
                    "src": "6426:33:2",
                    "text": "@notice Check for price range"
                  },
                  "id": 562,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revertIfPriceOutOfRange",
                  "nameLocation": "6473:23:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 540,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 535,
                        "mutability": "mutable",
                        "name": "provided",
                        "nameLocation": "6505:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 562,
                        "src": "6497:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 534,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6497:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 537,
                        "mutability": "mutable",
                        "name": "expected",
                        "nameLocation": "6523:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 562,
                        "src": "6515:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 536,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6515:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 539,
                        "mutability": "mutable",
                        "name": "tolerance",
                        "nameLocation": "6541:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 562,
                        "src": "6533:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 538,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6533:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6496:55:2"
                  },
                  "returnParameters": {
                    "id": 541,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6586:0:2"
                  },
                  "scope": 753,
                  "src": "6464:288:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 584,
                    "nodeType": "Block",
                    "src": "6951:87:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 574,
                            "name": "caller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 569,
                            "src": "6965:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 575,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 571,
                            "src": "6975:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6965:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 583,
                        "nodeType": "IfStatement",
                        "src": "6961:70:2",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 578,
                                "name": "collection",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 565,
                                "src": "7003:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 579,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 567,
                                "src": "7015:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 580,
                                "name": "caller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 569,
                                "src": "7024:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 577,
                              "name": "NotVaultOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 281,
                              "src": "6989:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
                                "typeString": "function (address,uint256,address) pure returns (error)"
                              }
                            },
                            "id": 581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6989:42:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 582,
                          "nodeType": "RevertStatement",
                          "src": "6982:49:2"
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 563,
                    "nodeType": "StructuredDocumentation",
                    "src": "6758:37:2",
                    "text": "@notice Check for vault ownership"
                  },
                  "id": 585,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revertIfNotVaultOwner",
                  "nameLocation": "6809:21:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 572,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 565,
                        "mutability": "mutable",
                        "name": "collection",
                        "nameLocation": "6848:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 585,
                        "src": "6840:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 564,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6840:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 567,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "6876:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 585,
                        "src": "6868:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 566,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6868:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 569,
                        "mutability": "mutable",
                        "name": "caller",
                        "nameLocation": "6901:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 585,
                        "src": "6893:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 568,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6893:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 571,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "6925:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 585,
                        "src": "6917:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 570,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6917:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6830:106:2"
                  },
                  "returnParameters": {
                    "id": 573,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6951:0:2"
                  },
                  "scope": 753,
                  "src": "6800:238:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 604,
                    "nodeType": "Block",
                    "src": "7212:83:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 595,
                            "name": "caller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 590,
                            "src": "7226:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 596,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 592,
                            "src": "7236:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7226:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 603,
                        "nodeType": "IfStatement",
                        "src": "7222:66:2",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 599,
                                "name": "collection",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 588,
                                "src": "7269:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 600,
                                "name": "caller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 590,
                                "src": "7281:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 598,
                              "name": "NotCollectionOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 258,
                              "src": "7250:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$",
                                "typeString": "function (address,address) pure returns (error)"
                              }
                            },
                            "id": 601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7250:38:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 602,
                          "nodeType": "RevertStatement",
                          "src": "7243:45:2"
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 586,
                    "nodeType": "StructuredDocumentation",
                    "src": "7044:42:2",
                    "text": "@notice Check for collection ownership"
                  },
                  "id": 605,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revertIfNotCollectionOwner",
                  "nameLocation": "7100:26:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 593,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 588,
                        "mutability": "mutable",
                        "name": "collection",
                        "nameLocation": "7135:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 605,
                        "src": "7127:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 587,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7127:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 590,
                        "mutability": "mutable",
                        "name": "caller",
                        "nameLocation": "7155:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 605,
                        "src": "7147:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 589,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7147:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 592,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "7171:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 605,
                        "src": "7163:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 591,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7163:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7126:51:2"
                  },
                  "returnParameters": {
                    "id": 594,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7212:0:2"
                  },
                  "scope": 753,
                  "src": "7091:204:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 621,
                    "nodeType": "Block",
                    "src": "7425:65:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 613,
                            "name": "caller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 608,
                            "src": "7439:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 614,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "7449:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7439:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 620,
                        "nodeType": "IfStatement",
                        "src": "7435:48:2",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 617,
                                "name": "caller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 608,
                                "src": "7476:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 616,
                              "name": "Unauthorized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 227,
                              "src": "7463:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                "typeString": "function (address) pure returns (error)"
                              }
                            },
                            "id": 618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7463:20:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 619,
                          "nodeType": "RevertStatement",
                          "src": "7456:27:2"
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 606,
                    "nodeType": "StructuredDocumentation",
                    "src": "7301:40:2",
                    "text": "@notice Check for contract ownership"
                  },
                  "id": 622,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revertIfNotContractOwner",
                  "nameLocation": "7355:24:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 611,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 608,
                        "mutability": "mutable",
                        "name": "caller",
                        "nameLocation": "7388:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 622,
                        "src": "7380:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 607,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7380:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 610,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "7404:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 622,
                        "src": "7396:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 609,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7396:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7379:31:2"
                  },
                  "returnParameters": {
                    "id": 612,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7425:0:2"
                  },
                  "scope": 753,
                  "src": "7346:144:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 641,
                    "nodeType": "Block",
                    "src": "7621:75:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 630,
                            "name": "facet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 627,
                            "src": "7635:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 633,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7652:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 632,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7644:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 631,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7644:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7644:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7635:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 640,
                        "nodeType": "IfStatement",
                        "src": "7631:58:2",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 637,
                                "name": "selector",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 625,
                                "src": "7680:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "id": 636,
                              "name": "FunctionNotFound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 181,
                              "src": "7663:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_bytes4_$returns$_t_error_$",
                                "typeString": "function (bytes4) pure returns (error)"
                              }
                            },
                            "id": 638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7663:26:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 639,
                          "nodeType": "RevertStatement",
                          "src": "7656:33:2"
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 623,
                    "nodeType": "StructuredDocumentation",
                    "src": "7496:40:2",
                    "text": "@notice Check for function existence"
                  },
                  "id": 642,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revertIfFunctionNotFound",
                  "nameLocation": "7550:24:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 628,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 625,
                        "mutability": "mutable",
                        "name": "selector",
                        "nameLocation": "7582:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 642,
                        "src": "7575:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 624,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "7575:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 627,
                        "mutability": "mutable",
                        "name": "facet",
                        "nameLocation": "7600:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 642,
                        "src": "7592:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 626,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7592:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7574:32:2"
                  },
                  "returnParameters": {
                    "id": 629,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7621:0:2"
                  },
                  "scope": 753,
                  "src": "7541:155:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 680,
                    "nodeType": "Block",
                    "src": "7870:198:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 650,
                              "name": "initContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 645,
                              "src": "7884:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 653,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7908:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 652,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7900:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 651,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7900:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7900:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7884:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 656,
                                "name": "initData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 647,
                                "src": "7914:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7923:6:2",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "7914:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 658,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7932:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "7914:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7884:49:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 664,
                        "nodeType": "IfStatement",
                        "src": "7880:85:2",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 661,
                              "name": "InvalidInitialization",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 211,
                              "src": "7942:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7942:23:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 663,
                          "nodeType": "RevertStatement",
                          "src": "7935:30:2"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 665,
                              "name": "initContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 645,
                              "src": "7979:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 668,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8003:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 667,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7995:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 666,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7995:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7995:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7979:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 671,
                                "name": "initData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 647,
                                "src": "8009:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8018:6:2",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "8009:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 673,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8028:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8009:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7979:50:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 679,
                        "nodeType": "IfStatement",
                        "src": "7975:86:2",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 676,
                              "name": "InvalidInitialization",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 211,
                              "src": "8038:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8038:23:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 678,
                          "nodeType": "RevertStatement",
                          "src": "8031:30:2"
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 643,
                    "nodeType": "StructuredDocumentation",
                    "src": "7702:45:2",
                    "text": "@notice Check for initialization contract"
                  },
                  "id": 681,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revertIfInitializationInvalid",
                  "nameLocation": "7761:29:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 648,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 645,
                        "mutability": "mutable",
                        "name": "initContract",
                        "nameLocation": "7799:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 681,
                        "src": "7791:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 644,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7791:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 647,
                        "mutability": "mutable",
                        "name": "initData",
                        "nameLocation": "7826:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 681,
                        "src": "7813:21:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 646,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7813:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7790:45:2"
                  },
                  "returnParameters": {
                    "id": 649,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7870:0:2"
                  },
                  "scope": 753,
                  "src": "7752:316:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 698,
                    "nodeType": "Block",
                    "src": "8196:80:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 689,
                            "name": "length1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 684,
                            "src": "8210:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 690,
                            "name": "length2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 686,
                            "src": "8221:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8210:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 697,
                        "nodeType": "IfStatement",
                        "src": "8206:63:2",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 693,
                                "name": "length1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 684,
                                "src": "8252:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 694,
                                "name": "length2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 686,
                                "src": "8261:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 692,
                              "name": "LengthMismatch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 367,
                              "src": "8237:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                "typeString": "function (uint256,uint256) pure returns (error)"
                              }
                            },
                            "id": 695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8237:32:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 696,
                          "nodeType": "RevertStatement",
                          "src": "8230:39:2"
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 682,
                    "nodeType": "StructuredDocumentation",
                    "src": "8074:37:2",
                    "text": "@notice Check for length mismatch"
                  },
                  "id": 699,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revertIfLengthMismatch",
                  "nameLocation": "8125:22:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 687,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 684,
                        "mutability": "mutable",
                        "name": "length1",
                        "nameLocation": "8156:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 699,
                        "src": "8148:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 683,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8148:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 686,
                        "mutability": "mutable",
                        "name": "length2",
                        "nameLocation": "8173:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 699,
                        "src": "8165:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 685,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8165:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8147:34:2"
                  },
                  "returnParameters": {
                    "id": 688,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8196:0:2"
                  },
                  "scope": 753,
                  "src": "8116:160:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 716,
                    "nodeType": "Block",
                    "src": "8403:72:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 707,
                            "name": "size",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 702,
                            "src": "8417:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 708,
                            "name": "limit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 704,
                            "src": "8424:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8417:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 715,
                        "nodeType": "IfStatement",
                        "src": "8413:55:2",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 711,
                                "name": "size",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 702,
                                "src": "8456:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 712,
                                "name": "limit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 704,
                                "src": "8462:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 710,
                              "name": "BatchSizeExceeded",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 374,
                              "src": "8438:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                "typeString": "function (uint256,uint256) pure returns (error)"
                              }
                            },
                            "id": 713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8438:30:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 714,
                          "nodeType": "RevertStatement",
                          "src": "8431:37:2"
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 700,
                    "nodeType": "StructuredDocumentation",
                    "src": "8282:38:2",
                    "text": "@notice Check for batch size limit"
                  },
                  "id": 717,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revertIfBatchSizeExceeded",
                  "nameLocation": "8334:25:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 705,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 702,
                        "mutability": "mutable",
                        "name": "size",
                        "nameLocation": "8368:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 717,
                        "src": "8360:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 701,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8360:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 704,
                        "mutability": "mutable",
                        "name": "limit",
                        "nameLocation": "8382:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 717,
                        "src": "8374:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 703,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8374:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8359:29:2"
                  },
                  "returnParameters": {
                    "id": 706,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8403:0:2"
                  },
                  "scope": 753,
                  "src": "8325:150:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 732,
                    "nodeType": "Block",
                    "src": "8614:67:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 725,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 720,
                            "src": "8628:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 726,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 722,
                            "src": "8641:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8628:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 731,
                        "nodeType": "IfStatement",
                        "src": "8624:50:2",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 728,
                              "name": "InvalidRecipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 377,
                              "src": "8656:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8656:18:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 730,
                          "nodeType": "RevertStatement",
                          "src": "8649:25:2"
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 718,
                    "nodeType": "StructuredDocumentation",
                    "src": "8481:45:2",
                    "text": "@notice Check if recipient matches sender"
                  },
                  "id": 733,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revertIfInvalidRecipient",
                  "nameLocation": "8540:24:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 723,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 720,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "8573:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 733,
                        "src": "8565:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 719,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8565:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 722,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "8592:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 733,
                        "src": "8584:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 721,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8584:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8564:35:2"
                  },
                  "returnParameters": {
                    "id": 724,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8614:0:2"
                  },
                  "scope": 753,
                  "src": "8531:150:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 751,
                    "nodeType": "Block",
                    "src": "8904:95:2",
                    "statements": [
                      {
                        "condition": {
                          "id": 744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "8918:12:2",
                          "subExpression": {
                            "id": 743,
                            "name": "isSupported",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 738,
                            "src": "8919:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 750,
                        "nodeType": "IfStatement",
                        "src": "8914:78:2",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 746,
                                "name": "contractAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 736,
                                "src": "8961:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 747,
                                "name": "interfaceName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 740,
                                "src": "8978:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 745,
                              "name": "InterfaceNotSupported",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 387,
                              "src": "8939:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$_t_string_memory_ptr_$returns$_t_error_$",
                                "typeString": "function (address,string memory) pure returns (error)"
                              }
                            },
                            "id": 748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8939:53:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 749,
                          "nodeType": "RevertStatement",
                          "src": "8932:60:2"
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 734,
                    "nodeType": "StructuredDocumentation",
                    "src": "8687:57:2",
                    "text": "@notice Check if contract supports required interface"
                  },
                  "id": 752,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revertIfInterfaceNotSupported",
                  "nameLocation": "8758:29:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 741,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 736,
                        "mutability": "mutable",
                        "name": "contractAddress",
                        "nameLocation": "8805:15:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 752,
                        "src": "8797:23:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 735,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8797:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 738,
                        "mutability": "mutable",
                        "name": "isSupported",
                        "nameLocation": "8835:11:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 752,
                        "src": "8830:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 737,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8830:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 740,
                        "mutability": "mutable",
                        "name": "interfaceName",
                        "nameLocation": "8870:13:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 752,
                        "src": "8856:27:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 739,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "8856:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8787:102:2"
                  },
                  "returnParameters": {
                    "id": 742,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8904:0:2"
                  },
                  "scope": 753,
                  "src": "8749:250:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 754,
              "src": "192:8809:2",
              "usedErrors": [
                181, 188, 193, 198, 203, 208, 211, 216, 219, 222, 227, 232, 235,
                238, 241, 246, 251, 258, 265, 272, 281, 286, 291, 294, 299, 302,
                307, 310, 317, 324, 331, 336, 345, 350, 357, 360, 367, 374, 377,
                380, 387, 390, 393
              ],
              "usedEvents": []
            }
          ],
          "src": "32:8970:2"
        },
        "id": 2
      }
    },
    "contracts": {
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                { "internalType": "bool", "name": "", "type": "bool" }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
            "kind": "dev",
            "methods": {
              "supportsInterface(bytes4)": {
                "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": { "supportsInterface(bytes4)": "01ffc9a7" }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": { "storage": [], "types": null },
          "userdoc": { "kind": "user", "methods": {}, "version": 1 }
        }
      },
      "src/beacon/SimpleVaultBeacon.sol": {
        "SimpleERC1155VaultBeacon": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_implementation",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "caller",
                  "type": "address"
                }
              ],
              "name": "Unauthorized",
              "type": "error"
            },
            { "inputs": [], "name": "ZeroAddress", "type": "error" },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "oldImplementation",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newImplementation",
                  "type": "address"
                }
              ],
              "name": "ImplementationUpgraded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "implementation",
              "outputs": [
                { "internalType": "address", "name": "", "type": "address" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                { "internalType": "address", "name": "", "type": "address" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                { "internalType": "bool", "name": "", "type": "bool" }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newImplementation",
                  "type": "address"
                }
              ],
              "name": "upgrade",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "supportsInterface(bytes4)": {
                "params": { "interfaceId": "Interface identifier" },
                "returns": { "_0": "bool True if interface is supported" }
              },
              "transferOwnership(address)": {
                "params": { "newOwner": "Address of the new owner" }
              },
              "upgrade(address)": {
                "params": {
                  "newImplementation": "Address of the new implementation"
                }
              }
            },
            "title": "SimpleERC1155VaultBeacon",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60803460b557601f61030c38819003918201601f19168301916001600160401b0383118484101760b95780849260209460405283398101031260b557516001600160a01b0381169081900360b557801560a65760018060a01b03195f5416175f553360018060a01b03196001541617600155604051335f7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a361023e90816100ce8239f35b63d92e233d60e01b5f5260045ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a7146101b3575080630900f010146101335780635c60da1b1461010c5780638da5cb5b146100e45763f2fde38b14610053575f80fd5b346100e05760203660031901126100e0576004356001600160a01b038116908181036100e057600154906001600160a01b038216338190036100cd5761009984926101e9565b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a36001600160a01b03191617600155005b63472511eb60e11b5f523360045260245ffd5b5f80fd5b346100e0575f3660031901126100e0576001546040516001600160a01b039091168152602090f35b346100e0575f3660031901126100e0575f546040516001600160a01b039091168152602090f35b346100e05760203660031901126100e0576004356001600160a01b038116908181036100e0576001546001600160a01b031633036100cd57610174906101e9565b5f548160018060a01b0382167f1a5ca99a64512489fd9455e8da426740174107a69292fca0a8b80b08f6f678925f80a36001600160a01b031916175f55005b346100e05760203660031901126100e0576004359063ffffffff60e01b82168092036100e0576020916301ffc9a760e01b148152f35b6001600160a01b0316156101f957565b63d92e233d60e01b5f5260045ffdfea2646970667358221220f895300a7b762220bbc11be83430f4975c90deb00e05d02403ebae78fe248d2764736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 CALLVALUE PUSH1 0xB5 JUMPI PUSH1 0x1F PUSH2 0x30C CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0xB9 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0xB5 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH1 0xB5 JUMPI DUP1 ISZERO PUSH1 0xA6 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH0 SLOAD AND OR PUSH0 SSTORE CALLER PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD CALLER PUSH0 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP2 DUP1 LOG3 PUSH2 0x23E SWAP1 DUP2 PUSH2 0xCE DUP3 CODECOPY RETURN JUMPDEST PUSH4 0xD92E233D PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x1B3 JUMPI POP DUP1 PUSH4 0x900F010 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE4 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x53 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0xE0 JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER DUP2 SWAP1 SUB PUSH2 0xCD JUMPI PUSH2 0x99 DUP5 SWAP3 PUSH2 0x1E9 JUMP JUMPDEST PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x1 SSTORE STOP JUMPDEST PUSH4 0x472511EB PUSH1 0xE1 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0xE0 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xCD JUMPI PUSH2 0x174 SWAP1 PUSH2 0x1E9 JUMP JUMPDEST PUSH0 SLOAD DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH32 0x1A5CA99A64512489FD9455E8DA426740174107A69292FCA0A8B80B08F6F67892 PUSH0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH0 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0xE0 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1F9 JUMPI JUMP JUMPDEST PUSH4 0xD92E233D PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 SWAP6 ADDRESS EXP PUSH28 0x762220BBC11BE83430F4975C90DEB00E05D02403EBAE78FE248D2764 PUSH20 0x6F6C634300081C00330000000000000000000000 ",
              "sourceMap": "2510:137:1:-:0;;;;;;;;;;;;;-1:-1:-1;;2510:137:1;;;;-1:-1:-1;;;;;2510:137:1;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2510:137:1;;;;;;;;4927:18:2;;4923:44;;2510:137:1;;;;;;-1:-1:-1;2510:137:1;;;-1:-1:-1;2510:137:1;1086:10;2510:137;;;;;;1078:18;2510:137;;;1078:18;2510:137;;;1086:10;-1:-1:-1;1111:44:1;;;;2510:137;;;;;;;4923:44:2;4954:13;;;-1:-1:-1;4954:13:2;;-1:-1:-1;4954:13:2;2510:137:1;-1:-1:-1;2510:137:1;;;;;;-1:-1:-1;2510:137:1;;;;;-1:-1:-1;2510:137:1"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "fun_revertIfZeroAddress": {
                  "entryPoint": 489,
                  "id": 410,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a7146101b3575080630900f010146101335780635c60da1b1461010c5780638da5cb5b146100e45763f2fde38b14610053575f80fd5b346100e05760203660031901126100e0576004356001600160a01b038116908181036100e057600154906001600160a01b038216338190036100cd5761009984926101e9565b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a36001600160a01b03191617600155005b63472511eb60e11b5f523360045260245ffd5b5f80fd5b346100e0575f3660031901126100e0576001546040516001600160a01b039091168152602090f35b346100e0575f3660031901126100e0575f546040516001600160a01b039091168152602090f35b346100e05760203660031901126100e0576004356001600160a01b038116908181036100e0576001546001600160a01b031633036100cd57610174906101e9565b5f548160018060a01b0382167f1a5ca99a64512489fd9455e8da426740174107a69292fca0a8b80b08f6f678925f80a36001600160a01b031916175f55005b346100e05760203660031901126100e0576004359063ffffffff60e01b82168092036100e0576020916301ffc9a760e01b148152f35b6001600160a01b0316156101f957565b63d92e233d60e01b5f5260045ffdfea2646970667358221220f895300a7b762220bbc11be83430f4975c90deb00e05d02403ebae78fe248d2764736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x1B3 JUMPI POP DUP1 PUSH4 0x900F010 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE4 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x53 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0xE0 JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER DUP2 SWAP1 SUB PUSH2 0xCD JUMPI PUSH2 0x99 DUP5 SWAP3 PUSH2 0x1E9 JUMP JUMPDEST PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x1 SSTORE STOP JUMPDEST PUSH4 0x472511EB PUSH1 0xE1 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0xE0 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xCD JUMPI PUSH2 0x174 SWAP1 PUSH2 0x1E9 JUMP JUMPDEST PUSH0 SLOAD DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH32 0x1A5CA99A64512489FD9455E8DA426740174107A69292FCA0A8B80B08F6F67892 PUSH0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH0 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0xE0 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1F9 JUMPI JUMP JUMPDEST PUSH4 0xD92E233D PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 SWAP6 ADDRESS EXP PUSH28 0x762220BBC11BE83430F4975C90DEB00E05D02403EBAE78FE248D2764 PUSH20 0x6F6C634300081C00330000000000000000000000 ",
              "sourceMap": "2510:137:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2510:137:1;;;;;;-1:-1:-1;;;;;2510:137:1;;;;;;;;757:5;2510:137;;-1:-1:-1;;;;;2510:137:1;;743:10;:19;;;739:66;;1758:8;;;;:::i;:::-;1782:37;2510:137;1782:37;;-1:-1:-1;;;;;;2510:137:1;;757:5;2510:137;;739:66;771:34;;;2510:137;771:34;743:10;2510:137;;;;771:34;2510:137;;;;;;;;;;-1:-1:-1;;2510:137:1;;;;;;;;-1:-1:-1;;;;;2510:137:1;;;;;;;;;;;;;;-1:-1:-1;;2510:137:1;;;;;;;;-1:-1:-1;;;;;2510:137:1;;;;;;;;;;;;;;-1:-1:-1;;2510:137:1;;;;;;-1:-1:-1;;;;;2510:137:1;;;;;;;;;;-1:-1:-1;;;;;2510:137:1;743:10;:19;739:66;;1395:17;;;:::i;:::-;2510:137;;;;;;;;;;1428:57;2510:137;1428:57;;-1:-1:-1;;;;;;2510:137:1;;;;;;;;;;;-1:-1:-1;;2510:137:1;;;;;;;;;;;;;;;;;;2126:25;;;;2111:40;2510:137;;;4856:118:2;-1:-1:-1;;;;;2510:137:1;4927:18:2;4923:44;;4856:118::o;4923:44::-;4954:13;;;4943:1;4954:13;;4943:1;4954:13"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "114800",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "implementation()": "2323",
                "owner()": "2346",
                "supportsInterface(bytes4)": "204",
                "transferOwnership(address)": "26117",
                "upgrade(address)": "28164"
              }
            },
            "methodIdentifiers": {
              "implementation()": "5c60da1b",
              "owner()": "8da5cb5b",
              "supportsInterface(bytes4)": "01ffc9a7",
              "transferOwnership(address)": "f2fde38b",
              "upgrade(address)": "0900f010"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"ImplementationUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"Interface identifier\"},\"returns\":{\"_0\":\"bool True if interface is supported\"}},\"transferOwnership(address)\":{\"params\":{\"newOwner\":\"Address of the new owner\"}},\"upgrade(address)\":{\"params\":{\"newImplementation\":\"Address of the new implementation\"}}},\"title\":\"SimpleERC1155VaultBeacon\",\"version\":1},\"userdoc\":{\"errors\":{\"Unauthorized(address)\":[{\"notice\":\"Operation attempted by non-owner\"}],\"ZeroAddress()\":[{\"notice\":\"Zero address provided where a non-zero address is required\"}]},\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"Interface support check\"},\"transferOwnership(address)\":{\"notice\":\"Transfer ownership of the beacon\"},\"upgrade(address)\":{\"notice\":\"Upgrade the implementation\"}},\"notice\":\"Simplified beacon for ERC1155 vault implementations\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/beacon/SimpleVaultBeacon.sol\":\"SimpleERC1155VaultBeacon\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"},\"src/beacon/SimpleVaultBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\nimport \\\"../libraries/LibErrors.sol\\\";\\n\\n/**\\n * @title SimpleVaultBeacon\\n * @notice Simplified beacon contract for vault implementations\\n * @dev Follows EIP-1967 beacon pattern but doesn't check for IERC165 support\\n */\\ncontract SimpleVaultBeacon is IERC165 {\\n    // Events\\n    event ImplementationUpgraded(\\n        address indexed oldImplementation, address indexed newImplementation\\n    );\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    // State variables\\n    address public implementation;\\n    address public owner;\\n\\n    // Modifiers\\n    modifier onlyOwner() {\\n        if (msg.sender != owner) revert LibErrors.Unauthorized(msg.sender);\\n        _;\\n    }\\n\\n    /**\\n     * @notice Constructor\\n     * @param _implementation Initial implementation address\\n     */\\n    constructor(address _implementation) {\\n        LibErrors.revertIfZeroAddress(_implementation);\\n        implementation = _implementation;\\n        owner = msg.sender;\\n        emit OwnershipTransferred(address(0), msg.sender);\\n    }\\n\\n    /**\\n     * @notice Upgrade the implementation\\n     * @param newImplementation Address of the new implementation\\n     */\\n    function upgrade(address newImplementation) external onlyOwner {\\n        LibErrors.revertIfZeroAddress(newImplementation);\\n        emit ImplementationUpgraded(implementation, newImplementation);\\n        implementation = newImplementation;\\n    }\\n\\n    /**\\n     * @notice Transfer ownership of the beacon\\n     * @param newOwner Address of the new owner\\n     */\\n    function transferOwnership(address newOwner) external onlyOwner {\\n        LibErrors.revertIfZeroAddress(newOwner);\\n        emit OwnershipTransferred(owner, newOwner);\\n        owner = newOwner;\\n    }\\n\\n    /**\\n     * @notice Interface support check\\n     * @param interfaceId Interface identifier\\n     * @return bool True if interface is supported\\n     */\\n    function supportsInterface(bytes4 interfaceId) public pure override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\\n/**\\n * @title SimpleERC721VaultBeacon\\n * @notice Simplified beacon for ERC721 vault implementations\\n */\\ncontract SimpleERC721VaultBeacon is SimpleVaultBeacon {\\n    constructor(address _implementation) SimpleVaultBeacon(_implementation) {}\\n}\\n\\n/**\\n * @title SimpleERC1155VaultBeacon\\n * @notice Simplified beacon for ERC1155 vault implementations\\n */\\ncontract SimpleERC1155VaultBeacon is SimpleVaultBeacon {\\n    constructor(address _implementation) SimpleVaultBeacon(_implementation) {}\\n}\\n\",\"keccak256\":\"0x8795fd379b2fcbaf800ca07f14d342c3bba0b171b25cda0c4e78a40cda27a58b\",\"license\":\"MIT\"},\"src/libraries/LibErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n/// @title LibErrors\\n/// @notice Library for centralized error definitions\\n/// @dev Contains all custom errors used across the system\\nlibrary LibErrors {\\n    // ============ Diamond Errors ============\\n\\n    /// @notice Function does not exist in any facet\\n    error FunctionNotFound(bytes4 selector);\\n\\n    /// @notice Initialization failed during diamond cut\\n    error DiamondInitFailed(address initContract, bytes initData);\\n\\n    /// @notice Invalid facet cut action provided\\n    error InvalidFacetCutAction(uint8 action);\\n\\n    /// @notice Function already exists and cannot be added again\\n    error FunctionAlreadyExists(bytes4 selector);\\n\\n    /// @notice Function doesn't exist and cannot be replaced/removed\\n    error FunctionDoesNotExist(bytes4 selector);\\n\\n    /// @notice Cannot replace function with same function\\n    error CannotReplaceSameFunction(bytes4 selector);\\n\\n    /// @notice Invalid initialization parameters\\n    error InvalidInitialization();\\n\\n    /// @notice Initialization contract has no code\\n    error InitializationContractEmpty(address initContract);\\n\\n    /// @notice Delegate call failed\\n    error DelegateCallFailed();\\n\\n    // ============ Common Errors ============\\n\\n    /// @notice Zero address provided where a non-zero address is required\\n    error ZeroAddress();\\n\\n    /// @notice Operation attempted by non-owner\\n    error Unauthorized(address caller);\\n\\n    /// @notice Invalid collection address provided\\n    error InvalidCollection(address collection);\\n\\n    /// @notice Factory not set in storage\\n    error FactoryNotSet();\\n\\n    /// @notice Transfer operation failed\\n    error TransferFailed();\\n\\n    /// @notice Invalid implementation contract\\n    error InvalidImplementation();\\n\\n    // ============ Collection Errors ============\\n\\n    /// @notice Invalid collection type provided\\n    error InvalidCollectionType(uint8 collectionType);\\n\\n    /// @notice Invalid operation for collection type\\n    error InvalidCollectionOperation(address collection);\\n\\n    /// @notice Not the owner of the collection\\n    error NotCollectionOwner(address collection, address caller);\\n\\n    // ============ Vault State Errors ============\\n\\n    /// @notice Vault is already locked\\n    error VaultAlreadyLocked(address collection, uint256 tokenId);\\n\\n    /// @notice Vault is not locked\\n    error VaultNotLocked(address collection, uint256 tokenId);\\n\\n    /// @notice Vault owner check failed\\n    error NotVaultOwner(address collection, uint256 tokenId, address caller);\\n\\n    // ============ Witness Errors ============\\n\\n    /// @notice Witness already exists\\n    error WitnessAlreadyExists(address witness);\\n\\n    /// @notice Witness does not exist\\n    error WitnessDoesNotExist(address witness);\\n\\n    /// @notice No witnesses remaining\\n    error NoWitnessesRemaining();\\n\\n    /// @notice Not a witness\\n    error NotWitness(address caller);\\n\\n    // ============ Signature Errors ============\\n\\n    /// @notice Invalid signature provided\\n    error InvalidSignature();\\n\\n    /// @notice Nonce already used\\n    error NonceAlreadyUsed(uint256 nonce);\\n\\n    // ============ Unvault Errors ============\\n\\n    /// @notice Unvaulter contract not set\\n    error UnvaulterNotSet();\\n\\n    /// @notice Token already unvaulted\\n    error AlreadyUnvaulted(address collection, uint256 tokenId);\\n\\n    /// @notice Burn operation failed\\n    error BurnFailed(address collection, uint256 tokenId);\\n\\n    // ============ Mint Errors ============\\n\\n    /// @notice Mint operation failed\\n    error MintFailed(address collection, uint256 tokenId);\\n\\n    /// @notice Invalid amount provided\\n    error InvalidAmount(uint256 amount);\\n\\n    /// @notice Price out of acceptable range\\n    error PriceOutOfRange(uint256 provided, uint256 expected, uint256 tolerance);\\n\\n    /// @notice Invalid token ID\\n    error InvalidTokenId(uint256 tokenId);\\n\\n    /// @notice Incorrect payment amount\\n    error IncorrectPayment(uint256 provided, uint256 expected);\\n\\n    /// @notice Eth transfer failed\\n    error ETHTransferFailed();\\n\\n    /// @notice Array length mismatch\\n    error LengthMismatch(uint256 length1, uint256 length2);\\n\\n    /// @notice Batch size exceeds limit\\n    error BatchSizeExceeded(uint256 size, uint256 limit);\\n\\n    /// @notice Recipient address does not match sender\\n    error InvalidRecipient();\\n\\n    /// @notice Number of serial numbers does not match amount\\n    error InvalidSerialNumbersCount();\\n\\n    /// @notice Required interface is not supported\\n    error InterfaceNotSupported(address contractAddress, string interfaceName);\\n\\n    // ============ Initialization Errors ============\\n\\n    /// @notice Already initialized\\n    error AlreadyInitialized();\\n\\n    /// @notice Initialization failed\\n    error InitializationFailed();\\n\\n    // ============ Helper Functions ============\\n\\n    /// @notice Check for zero address\\n    function revertIfZeroAddress(address addr) internal pure {\\n        if (addr == address(0)) revert ZeroAddress();\\n    }\\n\\n    /// @notice Check for valid collection\\n    function revertIfInvalidCollection(address collection, bool isValid) internal pure {\\n        if (!isValid) revert InvalidCollection(collection);\\n    }\\n\\n    /// @notice Check for factory\\n    function revertIfFactoryNotSet(address factory) internal pure {\\n        if (factory == address(0)) revert FactoryNotSet();\\n    }\\n\\n    /// @notice Check for vault lock state\\n    function revertIfAlreadyLocked(address collection, uint256 tokenId, bool isLocked)\\n        internal\\n        pure\\n    {\\n        if (isLocked) revert VaultAlreadyLocked(collection, tokenId);\\n    }\\n\\n    /// @notice Check for vault unlock state\\n    function revertIfNotLocked(address collection, uint256 tokenId, bool isLocked) internal pure {\\n        if (!isLocked) revert VaultNotLocked(collection, tokenId);\\n    }\\n\\n    /// @notice Check for witness status\\n    function revertIfNotWitness(address caller, bool isWitness) internal pure {\\n        if (!isWitness) revert NotWitness(caller);\\n    }\\n\\n    /// @notice Check for correct payment\\n    function revertIfIncorrectPayment(uint256 provided, uint256 expected) internal pure {\\n        if (provided != expected) revert IncorrectPayment(provided, expected);\\n    }\\n\\n    /// @notice Check for insufficient payment\\n    function revertIfInsufficientETH(uint256 provided, uint256 expected) internal pure {\\n        if (provided < expected) revert IncorrectPayment(provided, expected);\\n    }\\n\\n    /// @notice Check for price range\\n    function revertIfPriceOutOfRange(uint256 provided, uint256 expected, uint256 tolerance)\\n        internal\\n        pure\\n    {\\n        if (provided < expected - tolerance || provided > expected + tolerance) {\\n            revert PriceOutOfRange(provided, expected, tolerance);\\n        }\\n    }\\n\\n    /// @notice Check for vault ownership\\n    function revertIfNotVaultOwner(\\n        address collection,\\n        uint256 tokenId,\\n        address caller,\\n        address owner\\n    ) internal pure {\\n        if (caller != owner) revert NotVaultOwner(collection, tokenId, caller);\\n    }\\n\\n    /// @notice Check for collection ownership\\n    function revertIfNotCollectionOwner(address collection, address caller, address owner)\\n        internal\\n        pure\\n    {\\n        if (caller != owner) revert NotCollectionOwner(collection, caller);\\n    }\\n\\n    /// @notice Check for contract ownership\\n    function revertIfNotContractOwner(address caller, address owner) internal pure {\\n        if (caller != owner) revert Unauthorized(caller);\\n    }\\n\\n    /// @notice Check for function existence\\n    function revertIfFunctionNotFound(bytes4 selector, address facet) internal pure {\\n        if (facet == address(0)) revert FunctionNotFound(selector);\\n    }\\n\\n    /// @notice Check for initialization contract\\n    function revertIfInitializationInvalid(address initContract, bytes memory initData)\\n        internal\\n        pure\\n    {\\n        if (initContract == address(0) && initData.length > 0) revert InvalidInitialization();\\n        if (initContract != address(0) && initData.length == 0) revert InvalidInitialization();\\n    }\\n\\n    /// @notice Check for length mismatch\\n    function revertIfLengthMismatch(uint256 length1, uint256 length2) internal pure {\\n        if (length1 != length2) revert LengthMismatch(length1, length2);\\n    }\\n\\n    /// @notice Check for batch size limit\\n    function revertIfBatchSizeExceeded(uint256 size, uint256 limit) internal pure {\\n        if (size > limit) revert BatchSizeExceeded(size, limit);\\n    }\\n\\n    /// @notice Check if recipient matches sender\\n    function revertIfInvalidRecipient(address recipient, address sender) internal pure {\\n        if (recipient != sender) revert InvalidRecipient();\\n    }\\n\\n    /// @notice Check if contract supports required interface\\n    function revertIfInterfaceNotSupported(\\n        address contractAddress,\\n        bool isSupported,\\n        string memory interfaceName\\n    ) internal pure {\\n        if (!isSupported) revert InterfaceNotSupported(contractAddress, interfaceName);\\n    }\\n}\\n\",\"keccak256\":\"0x95df1fa4ab0e14172387b82a88e72662eccc990ec2cfb9ddd25ed538c005b5ac\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 32,
                "contract": "src/beacon/SimpleVaultBeacon.sol:SimpleERC1155VaultBeacon",
                "label": "implementation",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 34,
                "contract": "src/beacon/SimpleVaultBeacon.sol:SimpleERC1155VaultBeacon",
                "label": "owner",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              }
            }
          },
          "userdoc": {
            "errors": {
              "Unauthorized(address)": [
                { "notice": "Operation attempted by non-owner" }
              ],
              "ZeroAddress()": [
                {
                  "notice": "Zero address provided where a non-zero address is required"
                }
              ]
            },
            "kind": "user",
            "methods": {
              "supportsInterface(bytes4)": {
                "notice": "Interface support check"
              },
              "transferOwnership(address)": {
                "notice": "Transfer ownership of the beacon"
              },
              "upgrade(address)": { "notice": "Upgrade the implementation" }
            },
            "notice": "Simplified beacon for ERC1155 vault implementations",
            "version": 1
          }
        },
        "SimpleERC721VaultBeacon": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_implementation",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "caller",
                  "type": "address"
                }
              ],
              "name": "Unauthorized",
              "type": "error"
            },
            { "inputs": [], "name": "ZeroAddress", "type": "error" },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "oldImplementation",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newImplementation",
                  "type": "address"
                }
              ],
              "name": "ImplementationUpgraded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "implementation",
              "outputs": [
                { "internalType": "address", "name": "", "type": "address" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                { "internalType": "address", "name": "", "type": "address" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                { "internalType": "bool", "name": "", "type": "bool" }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newImplementation",
                  "type": "address"
                }
              ],
              "name": "upgrade",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "supportsInterface(bytes4)": {
                "params": { "interfaceId": "Interface identifier" },
                "returns": { "_0": "bool True if interface is supported" }
              },
              "transferOwnership(address)": {
                "params": { "newOwner": "Address of the new owner" }
              },
              "upgrade(address)": {
                "params": {
                  "newImplementation": "Address of the new implementation"
                }
              }
            },
            "title": "SimpleERC721VaultBeacon",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60803460b557601f61030c38819003918201601f19168301916001600160401b0383118484101760b95780849260209460405283398101031260b557516001600160a01b0381169081900360b557801560a65760018060a01b03195f5416175f553360018060a01b03196001541617600155604051335f7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a361023e90816100ce8239f35b63d92e233d60e01b5f5260045ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a7146101b3575080630900f010146101335780635c60da1b1461010c5780638da5cb5b146100e45763f2fde38b14610053575f80fd5b346100e05760203660031901126100e0576004356001600160a01b038116908181036100e057600154906001600160a01b038216338190036100cd5761009984926101e9565b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a36001600160a01b03191617600155005b63472511eb60e11b5f523360045260245ffd5b5f80fd5b346100e0575f3660031901126100e0576001546040516001600160a01b039091168152602090f35b346100e0575f3660031901126100e0575f546040516001600160a01b039091168152602090f35b346100e05760203660031901126100e0576004356001600160a01b038116908181036100e0576001546001600160a01b031633036100cd57610174906101e9565b5f548160018060a01b0382167f1a5ca99a64512489fd9455e8da426740174107a69292fca0a8b80b08f6f678925f80a36001600160a01b031916175f55005b346100e05760203660031901126100e0576004359063ffffffff60e01b82168092036100e0576020916301ffc9a760e01b148152f35b6001600160a01b0316156101f957565b63d92e233d60e01b5f5260045ffdfea26469706673582212200f35e6ab8ea22565a56f7d299fe82c42930b96e27806eeea8031d6c0269bbea364736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 CALLVALUE PUSH1 0xB5 JUMPI PUSH1 0x1F PUSH2 0x30C CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0xB9 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0xB5 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH1 0xB5 JUMPI DUP1 ISZERO PUSH1 0xA6 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH0 SLOAD AND OR PUSH0 SSTORE CALLER PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD CALLER PUSH0 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP2 DUP1 LOG3 PUSH2 0x23E SWAP1 DUP2 PUSH2 0xCE DUP3 CODECOPY RETURN JUMPDEST PUSH4 0xD92E233D PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x1B3 JUMPI POP DUP1 PUSH4 0x900F010 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE4 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x53 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0xE0 JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER DUP2 SWAP1 SUB PUSH2 0xCD JUMPI PUSH2 0x99 DUP5 SWAP3 PUSH2 0x1E9 JUMP JUMPDEST PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x1 SSTORE STOP JUMPDEST PUSH4 0x472511EB PUSH1 0xE1 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0xE0 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xCD JUMPI PUSH2 0x174 SWAP1 PUSH2 0x1E9 JUMP JUMPDEST PUSH0 SLOAD DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH32 0x1A5CA99A64512489FD9455E8DA426740174107A69292FCA0A8B80B08F6F67892 PUSH0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH0 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0xE0 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1F9 JUMPI JUMP JUMPDEST PUSH4 0xD92E233D PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF CALLDATALOAD 0xE6 0xAB DUP15 LOG2 0x25 PUSH6 0xA56F7D299FE8 0x2C TIMESTAMP SWAP4 SIGNEXTEND SWAP7 0xE2 PUSH25 0x6EEEA8031D6C0269BBEA364736F6C634300081C0033000000 ",
              "sourceMap": "2266:136:1:-:0;;;;;;;;;;;;;-1:-1:-1;;2266:136:1;;;;-1:-1:-1;;;;;2266:136:1;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2266:136:1;;;;;;;;4927:18:2;;4923:44;;2266:136:1;;;;;;-1:-1:-1;2266:136:1;;;-1:-1:-1;2266:136:1;1086:10;2266:136;;;;;;1078:18;2266:136;;;1078:18;2266:136;;;1086:10;-1:-1:-1;1111:44:1;;;;2266:136;;;;;;;4923:44:2;4954:13;;;-1:-1:-1;4954:13:2;;-1:-1:-1;4954:13:2;2266:136:1;-1:-1:-1;2266:136:1;;;;;;-1:-1:-1;2266:136:1;;;;;-1:-1:-1;2266:136:1"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "fun_revertIfZeroAddress": {
                  "entryPoint": 489,
                  "id": 410,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a7146101b3575080630900f010146101335780635c60da1b1461010c5780638da5cb5b146100e45763f2fde38b14610053575f80fd5b346100e05760203660031901126100e0576004356001600160a01b038116908181036100e057600154906001600160a01b038216338190036100cd5761009984926101e9565b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a36001600160a01b03191617600155005b63472511eb60e11b5f523360045260245ffd5b5f80fd5b346100e0575f3660031901126100e0576001546040516001600160a01b039091168152602090f35b346100e0575f3660031901126100e0575f546040516001600160a01b039091168152602090f35b346100e05760203660031901126100e0576004356001600160a01b038116908181036100e0576001546001600160a01b031633036100cd57610174906101e9565b5f548160018060a01b0382167f1a5ca99a64512489fd9455e8da426740174107a69292fca0a8b80b08f6f678925f80a36001600160a01b031916175f55005b346100e05760203660031901126100e0576004359063ffffffff60e01b82168092036100e0576020916301ffc9a760e01b148152f35b6001600160a01b0316156101f957565b63d92e233d60e01b5f5260045ffdfea26469706673582212200f35e6ab8ea22565a56f7d299fe82c42930b96e27806eeea8031d6c0269bbea364736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x1B3 JUMPI POP DUP1 PUSH4 0x900F010 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE4 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x53 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0xE0 JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER DUP2 SWAP1 SUB PUSH2 0xCD JUMPI PUSH2 0x99 DUP5 SWAP3 PUSH2 0x1E9 JUMP JUMPDEST PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x1 SSTORE STOP JUMPDEST PUSH4 0x472511EB PUSH1 0xE1 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0xE0 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xCD JUMPI PUSH2 0x174 SWAP1 PUSH2 0x1E9 JUMP JUMPDEST PUSH0 SLOAD DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH32 0x1A5CA99A64512489FD9455E8DA426740174107A69292FCA0A8B80B08F6F67892 PUSH0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH0 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0xE0 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1F9 JUMPI JUMP JUMPDEST PUSH4 0xD92E233D PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF CALLDATALOAD 0xE6 0xAB DUP15 LOG2 0x25 PUSH6 0xA56F7D299FE8 0x2C TIMESTAMP SWAP4 SIGNEXTEND SWAP7 0xE2 PUSH25 0x6EEEA8031D6C0269BBEA364736F6C634300081C0033000000 ",
              "sourceMap": "2266:136:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2266:136:1;;;;;;-1:-1:-1;;;;;2266:136:1;;;;;;;;757:5;2266:136;;-1:-1:-1;;;;;2266:136:1;;743:10;:19;;;739:66;;1758:8;;;;:::i;:::-;1782:37;2266:136;1782:37;;-1:-1:-1;;;;;;2266:136:1;;757:5;2266:136;;739:66;771:34;;;2266:136;771:34;743:10;2266:136;;;;771:34;2266:136;;;;;;;;;;-1:-1:-1;;2266:136:1;;;;;;;;-1:-1:-1;;;;;2266:136:1;;;;;;;;;;;;;;-1:-1:-1;;2266:136:1;;;;;;;;-1:-1:-1;;;;;2266:136:1;;;;;;;;;;;;;;-1:-1:-1;;2266:136:1;;;;;;-1:-1:-1;;;;;2266:136:1;;;;;;;;;;-1:-1:-1;;;;;2266:136:1;743:10;:19;739:66;;1395:17;;;:::i;:::-;2266:136;;;;;;;;;;1428:57;2266:136;1428:57;;-1:-1:-1;;;;;;2266:136:1;;;;;;;;;;;-1:-1:-1;;2266:136:1;;;;;;;;;;;;;;;;;;2126:25;;;;2111:40;2266:136;;;4856:118:2;-1:-1:-1;;;;;2266:136:1;4927:18:2;4923:44;;4856:118::o;4923:44::-;4954:13;;;4943:1;4954:13;;4943:1;4954:13"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "114800",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "implementation()": "2323",
                "owner()": "2346",
                "supportsInterface(bytes4)": "204",
                "transferOwnership(address)": "26117",
                "upgrade(address)": "28164"
              }
            },
            "methodIdentifiers": {
              "implementation()": "5c60da1b",
              "owner()": "8da5cb5b",
              "supportsInterface(bytes4)": "01ffc9a7",
              "transferOwnership(address)": "f2fde38b",
              "upgrade(address)": "0900f010"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"ImplementationUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"Interface identifier\"},\"returns\":{\"_0\":\"bool True if interface is supported\"}},\"transferOwnership(address)\":{\"params\":{\"newOwner\":\"Address of the new owner\"}},\"upgrade(address)\":{\"params\":{\"newImplementation\":\"Address of the new implementation\"}}},\"title\":\"SimpleERC721VaultBeacon\",\"version\":1},\"userdoc\":{\"errors\":{\"Unauthorized(address)\":[{\"notice\":\"Operation attempted by non-owner\"}],\"ZeroAddress()\":[{\"notice\":\"Zero address provided where a non-zero address is required\"}]},\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"Interface support check\"},\"transferOwnership(address)\":{\"notice\":\"Transfer ownership of the beacon\"},\"upgrade(address)\":{\"notice\":\"Upgrade the implementation\"}},\"notice\":\"Simplified beacon for ERC721 vault implementations\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/beacon/SimpleVaultBeacon.sol\":\"SimpleERC721VaultBeacon\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"},\"src/beacon/SimpleVaultBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\nimport \\\"../libraries/LibErrors.sol\\\";\\n\\n/**\\n * @title SimpleVaultBeacon\\n * @notice Simplified beacon contract for vault implementations\\n * @dev Follows EIP-1967 beacon pattern but doesn't check for IERC165 support\\n */\\ncontract SimpleVaultBeacon is IERC165 {\\n    // Events\\n    event ImplementationUpgraded(\\n        address indexed oldImplementation, address indexed newImplementation\\n    );\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    // State variables\\n    address public implementation;\\n    address public owner;\\n\\n    // Modifiers\\n    modifier onlyOwner() {\\n        if (msg.sender != owner) revert LibErrors.Unauthorized(msg.sender);\\n        _;\\n    }\\n\\n    /**\\n     * @notice Constructor\\n     * @param _implementation Initial implementation address\\n     */\\n    constructor(address _implementation) {\\n        LibErrors.revertIfZeroAddress(_implementation);\\n        implementation = _implementation;\\n        owner = msg.sender;\\n        emit OwnershipTransferred(address(0), msg.sender);\\n    }\\n\\n    /**\\n     * @notice Upgrade the implementation\\n     * @param newImplementation Address of the new implementation\\n     */\\n    function upgrade(address newImplementation) external onlyOwner {\\n        LibErrors.revertIfZeroAddress(newImplementation);\\n        emit ImplementationUpgraded(implementation, newImplementation);\\n        implementation = newImplementation;\\n    }\\n\\n    /**\\n     * @notice Transfer ownership of the beacon\\n     * @param newOwner Address of the new owner\\n     */\\n    function transferOwnership(address newOwner) external onlyOwner {\\n        LibErrors.revertIfZeroAddress(newOwner);\\n        emit OwnershipTransferred(owner, newOwner);\\n        owner = newOwner;\\n    }\\n\\n    /**\\n     * @notice Interface support check\\n     * @param interfaceId Interface identifier\\n     * @return bool True if interface is supported\\n     */\\n    function supportsInterface(bytes4 interfaceId) public pure override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\\n/**\\n * @title SimpleERC721VaultBeacon\\n * @notice Simplified beacon for ERC721 vault implementations\\n */\\ncontract SimpleERC721VaultBeacon is SimpleVaultBeacon {\\n    constructor(address _implementation) SimpleVaultBeacon(_implementation) {}\\n}\\n\\n/**\\n * @title SimpleERC1155VaultBeacon\\n * @notice Simplified beacon for ERC1155 vault implementations\\n */\\ncontract SimpleERC1155VaultBeacon is SimpleVaultBeacon {\\n    constructor(address _implementation) SimpleVaultBeacon(_implementation) {}\\n}\\n\",\"keccak256\":\"0x8795fd379b2fcbaf800ca07f14d342c3bba0b171b25cda0c4e78a40cda27a58b\",\"license\":\"MIT\"},\"src/libraries/LibErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n/// @title LibErrors\\n/// @notice Library for centralized error definitions\\n/// @dev Contains all custom errors used across the system\\nlibrary LibErrors {\\n    // ============ Diamond Errors ============\\n\\n    /// @notice Function does not exist in any facet\\n    error FunctionNotFound(bytes4 selector);\\n\\n    /// @notice Initialization failed during diamond cut\\n    error DiamondInitFailed(address initContract, bytes initData);\\n\\n    /// @notice Invalid facet cut action provided\\n    error InvalidFacetCutAction(uint8 action);\\n\\n    /// @notice Function already exists and cannot be added again\\n    error FunctionAlreadyExists(bytes4 selector);\\n\\n    /// @notice Function doesn't exist and cannot be replaced/removed\\n    error FunctionDoesNotExist(bytes4 selector);\\n\\n    /// @notice Cannot replace function with same function\\n    error CannotReplaceSameFunction(bytes4 selector);\\n\\n    /// @notice Invalid initialization parameters\\n    error InvalidInitialization();\\n\\n    /// @notice Initialization contract has no code\\n    error InitializationContractEmpty(address initContract);\\n\\n    /// @notice Delegate call failed\\n    error DelegateCallFailed();\\n\\n    // ============ Common Errors ============\\n\\n    /// @notice Zero address provided where a non-zero address is required\\n    error ZeroAddress();\\n\\n    /// @notice Operation attempted by non-owner\\n    error Unauthorized(address caller);\\n\\n    /// @notice Invalid collection address provided\\n    error InvalidCollection(address collection);\\n\\n    /// @notice Factory not set in storage\\n    error FactoryNotSet();\\n\\n    /// @notice Transfer operation failed\\n    error TransferFailed();\\n\\n    /// @notice Invalid implementation contract\\n    error InvalidImplementation();\\n\\n    // ============ Collection Errors ============\\n\\n    /// @notice Invalid collection type provided\\n    error InvalidCollectionType(uint8 collectionType);\\n\\n    /// @notice Invalid operation for collection type\\n    error InvalidCollectionOperation(address collection);\\n\\n    /// @notice Not the owner of the collection\\n    error NotCollectionOwner(address collection, address caller);\\n\\n    // ============ Vault State Errors ============\\n\\n    /// @notice Vault is already locked\\n    error VaultAlreadyLocked(address collection, uint256 tokenId);\\n\\n    /// @notice Vault is not locked\\n    error VaultNotLocked(address collection, uint256 tokenId);\\n\\n    /// @notice Vault owner check failed\\n    error NotVaultOwner(address collection, uint256 tokenId, address caller);\\n\\n    // ============ Witness Errors ============\\n\\n    /// @notice Witness already exists\\n    error WitnessAlreadyExists(address witness);\\n\\n    /// @notice Witness does not exist\\n    error WitnessDoesNotExist(address witness);\\n\\n    /// @notice No witnesses remaining\\n    error NoWitnessesRemaining();\\n\\n    /// @notice Not a witness\\n    error NotWitness(address caller);\\n\\n    // ============ Signature Errors ============\\n\\n    /// @notice Invalid signature provided\\n    error InvalidSignature();\\n\\n    /// @notice Nonce already used\\n    error NonceAlreadyUsed(uint256 nonce);\\n\\n    // ============ Unvault Errors ============\\n\\n    /// @notice Unvaulter contract not set\\n    error UnvaulterNotSet();\\n\\n    /// @notice Token already unvaulted\\n    error AlreadyUnvaulted(address collection, uint256 tokenId);\\n\\n    /// @notice Burn operation failed\\n    error BurnFailed(address collection, uint256 tokenId);\\n\\n    // ============ Mint Errors ============\\n\\n    /// @notice Mint operation failed\\n    error MintFailed(address collection, uint256 tokenId);\\n\\n    /// @notice Invalid amount provided\\n    error InvalidAmount(uint256 amount);\\n\\n    /// @notice Price out of acceptable range\\n    error PriceOutOfRange(uint256 provided, uint256 expected, uint256 tolerance);\\n\\n    /// @notice Invalid token ID\\n    error InvalidTokenId(uint256 tokenId);\\n\\n    /// @notice Incorrect payment amount\\n    error IncorrectPayment(uint256 provided, uint256 expected);\\n\\n    /// @notice Eth transfer failed\\n    error ETHTransferFailed();\\n\\n    /// @notice Array length mismatch\\n    error LengthMismatch(uint256 length1, uint256 length2);\\n\\n    /// @notice Batch size exceeds limit\\n    error BatchSizeExceeded(uint256 size, uint256 limit);\\n\\n    /// @notice Recipient address does not match sender\\n    error InvalidRecipient();\\n\\n    /// @notice Number of serial numbers does not match amount\\n    error InvalidSerialNumbersCount();\\n\\n    /// @notice Required interface is not supported\\n    error InterfaceNotSupported(address contractAddress, string interfaceName);\\n\\n    // ============ Initialization Errors ============\\n\\n    /// @notice Already initialized\\n    error AlreadyInitialized();\\n\\n    /// @notice Initialization failed\\n    error InitializationFailed();\\n\\n    // ============ Helper Functions ============\\n\\n    /// @notice Check for zero address\\n    function revertIfZeroAddress(address addr) internal pure {\\n        if (addr == address(0)) revert ZeroAddress();\\n    }\\n\\n    /// @notice Check for valid collection\\n    function revertIfInvalidCollection(address collection, bool isValid) internal pure {\\n        if (!isValid) revert InvalidCollection(collection);\\n    }\\n\\n    /// @notice Check for factory\\n    function revertIfFactoryNotSet(address factory) internal pure {\\n        if (factory == address(0)) revert FactoryNotSet();\\n    }\\n\\n    /// @notice Check for vault lock state\\n    function revertIfAlreadyLocked(address collection, uint256 tokenId, bool isLocked)\\n        internal\\n        pure\\n    {\\n        if (isLocked) revert VaultAlreadyLocked(collection, tokenId);\\n    }\\n\\n    /// @notice Check for vault unlock state\\n    function revertIfNotLocked(address collection, uint256 tokenId, bool isLocked) internal pure {\\n        if (!isLocked) revert VaultNotLocked(collection, tokenId);\\n    }\\n\\n    /// @notice Check for witness status\\n    function revertIfNotWitness(address caller, bool isWitness) internal pure {\\n        if (!isWitness) revert NotWitness(caller);\\n    }\\n\\n    /// @notice Check for correct payment\\n    function revertIfIncorrectPayment(uint256 provided, uint256 expected) internal pure {\\n        if (provided != expected) revert IncorrectPayment(provided, expected);\\n    }\\n\\n    /// @notice Check for insufficient payment\\n    function revertIfInsufficientETH(uint256 provided, uint256 expected) internal pure {\\n        if (provided < expected) revert IncorrectPayment(provided, expected);\\n    }\\n\\n    /// @notice Check for price range\\n    function revertIfPriceOutOfRange(uint256 provided, uint256 expected, uint256 tolerance)\\n        internal\\n        pure\\n    {\\n        if (provided < expected - tolerance || provided > expected + tolerance) {\\n            revert PriceOutOfRange(provided, expected, tolerance);\\n        }\\n    }\\n\\n    /// @notice Check for vault ownership\\n    function revertIfNotVaultOwner(\\n        address collection,\\n        uint256 tokenId,\\n        address caller,\\n        address owner\\n    ) internal pure {\\n        if (caller != owner) revert NotVaultOwner(collection, tokenId, caller);\\n    }\\n\\n    /// @notice Check for collection ownership\\n    function revertIfNotCollectionOwner(address collection, address caller, address owner)\\n        internal\\n        pure\\n    {\\n        if (caller != owner) revert NotCollectionOwner(collection, caller);\\n    }\\n\\n    /// @notice Check for contract ownership\\n    function revertIfNotContractOwner(address caller, address owner) internal pure {\\n        if (caller != owner) revert Unauthorized(caller);\\n    }\\n\\n    /// @notice Check for function existence\\n    function revertIfFunctionNotFound(bytes4 selector, address facet) internal pure {\\n        if (facet == address(0)) revert FunctionNotFound(selector);\\n    }\\n\\n    /// @notice Check for initialization contract\\n    function revertIfInitializationInvalid(address initContract, bytes memory initData)\\n        internal\\n        pure\\n    {\\n        if (initContract == address(0) && initData.length > 0) revert InvalidInitialization();\\n        if (initContract != address(0) && initData.length == 0) revert InvalidInitialization();\\n    }\\n\\n    /// @notice Check for length mismatch\\n    function revertIfLengthMismatch(uint256 length1, uint256 length2) internal pure {\\n        if (length1 != length2) revert LengthMismatch(length1, length2);\\n    }\\n\\n    /// @notice Check for batch size limit\\n    function revertIfBatchSizeExceeded(uint256 size, uint256 limit) internal pure {\\n        if (size > limit) revert BatchSizeExceeded(size, limit);\\n    }\\n\\n    /// @notice Check if recipient matches sender\\n    function revertIfInvalidRecipient(address recipient, address sender) internal pure {\\n        if (recipient != sender) revert InvalidRecipient();\\n    }\\n\\n    /// @notice Check if contract supports required interface\\n    function revertIfInterfaceNotSupported(\\n        address contractAddress,\\n        bool isSupported,\\n        string memory interfaceName\\n    ) internal pure {\\n        if (!isSupported) revert InterfaceNotSupported(contractAddress, interfaceName);\\n    }\\n}\\n\",\"keccak256\":\"0x95df1fa4ab0e14172387b82a88e72662eccc990ec2cfb9ddd25ed538c005b5ac\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 32,
                "contract": "src/beacon/SimpleVaultBeacon.sol:SimpleERC721VaultBeacon",
                "label": "implementation",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 34,
                "contract": "src/beacon/SimpleVaultBeacon.sol:SimpleERC721VaultBeacon",
                "label": "owner",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              }
            }
          },
          "userdoc": {
            "errors": {
              "Unauthorized(address)": [
                { "notice": "Operation attempted by non-owner" }
              ],
              "ZeroAddress()": [
                {
                  "notice": "Zero address provided where a non-zero address is required"
                }
              ]
            },
            "kind": "user",
            "methods": {
              "supportsInterface(bytes4)": {
                "notice": "Interface support check"
              },
              "transferOwnership(address)": {
                "notice": "Transfer ownership of the beacon"
              },
              "upgrade(address)": { "notice": "Upgrade the implementation" }
            },
            "notice": "Simplified beacon for ERC721 vault implementations",
            "version": 1
          }
        },
        "SimpleVaultBeacon": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_implementation",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "caller",
                  "type": "address"
                }
              ],
              "name": "Unauthorized",
              "type": "error"
            },
            { "inputs": [], "name": "ZeroAddress", "type": "error" },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "oldImplementation",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newImplementation",
                  "type": "address"
                }
              ],
              "name": "ImplementationUpgraded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "implementation",
              "outputs": [
                { "internalType": "address", "name": "", "type": "address" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                { "internalType": "address", "name": "", "type": "address" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                { "internalType": "bool", "name": "", "type": "bool" }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newImplementation",
                  "type": "address"
                }
              ],
              "name": "upgrade",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Follows EIP-1967 beacon pattern but doesn't check for IERC165 support",
            "kind": "dev",
            "methods": {
              "constructor": {
                "params": {
                  "_implementation": "Initial implementation address"
                }
              },
              "supportsInterface(bytes4)": {
                "params": { "interfaceId": "Interface identifier" },
                "returns": { "_0": "bool True if interface is supported" }
              },
              "transferOwnership(address)": {
                "params": { "newOwner": "Address of the new owner" }
              },
              "upgrade(address)": {
                "params": {
                  "newImplementation": "Address of the new implementation"
                }
              }
            },
            "title": "SimpleVaultBeacon",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60803460b557601f61030c38819003918201601f19168301916001600160401b0383118484101760b95780849260209460405283398101031260b557516001600160a01b0381169081900360b557801560a65760018060a01b03195f5416175f553360018060a01b03196001541617600155604051335f7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a361023e90816100ce8239f35b63d92e233d60e01b5f5260045ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a7146101b3575080630900f010146101335780635c60da1b1461010c5780638da5cb5b146100e45763f2fde38b14610053575f80fd5b346100e05760203660031901126100e0576004356001600160a01b038116908181036100e057600154906001600160a01b038216338190036100cd5761009984926101e9565b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a36001600160a01b03191617600155005b63472511eb60e11b5f523360045260245ffd5b5f80fd5b346100e0575f3660031901126100e0576001546040516001600160a01b039091168152602090f35b346100e0575f3660031901126100e0575f546040516001600160a01b039091168152602090f35b346100e05760203660031901126100e0576004356001600160a01b038116908181036100e0576001546001600160a01b031633036100cd57610174906101e9565b5f548160018060a01b0382167f1a5ca99a64512489fd9455e8da426740174107a69292fca0a8b80b08f6f678925f80a36001600160a01b031916175f55005b346100e05760203660031901126100e0576004359063ffffffff60e01b82168092036100e0576020916301ffc9a760e01b148152f35b6001600160a01b0316156101f957565b63d92e233d60e01b5f5260045ffdfea2646970667358221220f9d8aadd0e13d62ec6162910ffa00b5cf3eebae6aa991f076797b670c428a2c964736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 CALLVALUE PUSH1 0xB5 JUMPI PUSH1 0x1F PUSH2 0x30C CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0xB9 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0xB5 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH1 0xB5 JUMPI DUP1 ISZERO PUSH1 0xA6 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH0 SLOAD AND OR PUSH0 SSTORE CALLER PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD CALLER PUSH0 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP2 DUP1 LOG3 PUSH2 0x23E SWAP1 DUP2 PUSH2 0xCE DUP3 CODECOPY RETURN JUMPDEST PUSH4 0xD92E233D PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x1B3 JUMPI POP DUP1 PUSH4 0x900F010 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE4 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x53 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0xE0 JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER DUP2 SWAP1 SUB PUSH2 0xCD JUMPI PUSH2 0x99 DUP5 SWAP3 PUSH2 0x1E9 JUMP JUMPDEST PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x1 SSTORE STOP JUMPDEST PUSH4 0x472511EB PUSH1 0xE1 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0xE0 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xCD JUMPI PUSH2 0x174 SWAP1 PUSH2 0x1E9 JUMP JUMPDEST PUSH0 SLOAD DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH32 0x1A5CA99A64512489FD9455E8DA426740174107A69292FCA0A8B80B08F6F67892 PUSH0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH0 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0xE0 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1F9 JUMPI JUMP JUMPDEST PUSH4 0xD92E233D PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xD8 0xAA 0xDD 0xE SGT 0xD6 0x2E 0xC6 AND 0x29 LT SELFDESTRUCT LOG0 SIGNEXTEND TLOAD RETURN 0xEE 0xBA 0xE6 0xAA SWAP10 0x1F SMOD PUSH8 0x97B670C428A2C964 PUSH20 0x6F6C634300081C00330000000000000000000000 ",
              "sourceMap": "340:1820:1:-:0;;;;;;;;;;;;;-1:-1:-1;;340:1820:1;;;;-1:-1:-1;;;;;340:1820:1;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;340:1820:1;;;;;;;;4927:18:2;;4923:44;;340:1820:1;;;;;;-1:-1:-1;340:1820:1;;;-1:-1:-1;340:1820:1;1086:10;340:1820;;;;;;1078:18;340:1820;;;1078:18;340:1820;;;1086:10;-1:-1:-1;1111:44:1;;;;340:1820;;;;;;;4923:44:2;4954:13;;;-1:-1:-1;4954:13:2;;-1:-1:-1;4954:13:2;340:1820:1;-1:-1:-1;340:1820:1;;;;;;-1:-1:-1;340:1820:1;;;;;-1:-1:-1;340:1820:1"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "fun_revertIfZeroAddress": {
                  "entryPoint": 489,
                  "id": 410,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a7146101b3575080630900f010146101335780635c60da1b1461010c5780638da5cb5b146100e45763f2fde38b14610053575f80fd5b346100e05760203660031901126100e0576004356001600160a01b038116908181036100e057600154906001600160a01b038216338190036100cd5761009984926101e9565b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a36001600160a01b03191617600155005b63472511eb60e11b5f523360045260245ffd5b5f80fd5b346100e0575f3660031901126100e0576001546040516001600160a01b039091168152602090f35b346100e0575f3660031901126100e0575f546040516001600160a01b039091168152602090f35b346100e05760203660031901126100e0576004356001600160a01b038116908181036100e0576001546001600160a01b031633036100cd57610174906101e9565b5f548160018060a01b0382167f1a5ca99a64512489fd9455e8da426740174107a69292fca0a8b80b08f6f678925f80a36001600160a01b031916175f55005b346100e05760203660031901126100e0576004359063ffffffff60e01b82168092036100e0576020916301ffc9a760e01b148152f35b6001600160a01b0316156101f957565b63d92e233d60e01b5f5260045ffdfea2646970667358221220f9d8aadd0e13d62ec6162910ffa00b5cf3eebae6aa991f076797b670c428a2c964736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x1B3 JUMPI POP DUP1 PUSH4 0x900F010 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE4 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x53 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0xE0 JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER DUP2 SWAP1 SUB PUSH2 0xCD JUMPI PUSH2 0x99 DUP5 SWAP3 PUSH2 0x1E9 JUMP JUMPDEST PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x1 SSTORE STOP JUMPDEST PUSH4 0x472511EB PUSH1 0xE1 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0xE0 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xCD JUMPI PUSH2 0x174 SWAP1 PUSH2 0x1E9 JUMP JUMPDEST PUSH0 SLOAD DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH32 0x1A5CA99A64512489FD9455E8DA426740174107A69292FCA0A8B80B08F6F67892 PUSH0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH0 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE0 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0xE0 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1F9 JUMPI JUMP JUMPDEST PUSH4 0xD92E233D PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xD8 0xAA 0xDD 0xE SGT 0xD6 0x2E 0xC6 AND 0x29 LT SELFDESTRUCT LOG0 SIGNEXTEND TLOAD RETURN 0xEE 0xBA 0xE6 0xAA SWAP10 0x1F SMOD PUSH8 0x97B670C428A2C964 PUSH20 0x6F6C634300081C00330000000000000000000000 ",
              "sourceMap": "340:1820:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;340:1820:1;;;;;;-1:-1:-1;;;;;340:1820:1;;;;;;;;757:5;340:1820;;-1:-1:-1;;;;;340:1820:1;;743:10;:19;;;739:66;;1758:8;;;;:::i;:::-;1782:37;340:1820;1782:37;;-1:-1:-1;;;;;;340:1820:1;;757:5;340:1820;;739:66;771:34;;;340:1820;771:34;743:10;340:1820;;;;771:34;340:1820;;;;;;;;;;-1:-1:-1;;340:1820:1;;;;;;;;-1:-1:-1;;;;;340:1820:1;;;;;;;;;;;;;;-1:-1:-1;;340:1820:1;;;;;;;;-1:-1:-1;;;;;340:1820:1;;;;;;;;;;;;;;-1:-1:-1;;340:1820:1;;;;;;-1:-1:-1;;;;;340:1820:1;;;;;;;;;;-1:-1:-1;;;;;340:1820:1;743:10;:19;739:66;;1395:17;;;:::i;:::-;340:1820;;;;;;;;;;1428:57;340:1820;1428:57;;-1:-1:-1;;;;;;340:1820:1;;;;;;;;;;;-1:-1:-1;;340:1820:1;;;;;;;;;;;;;;;;;;2126:25;;;;2111:40;340:1820;;;4856:118:2;-1:-1:-1;;;;;340:1820:1;4927:18:2;4923:44;;4856:118::o;4923:44::-;4954:13;;;4943:1;4954:13;;4943:1;4954:13"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "114800",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "implementation()": "2323",
                "owner()": "2346",
                "supportsInterface(bytes4)": "204",
                "transferOwnership(address)": "26117",
                "upgrade(address)": "28164"
              }
            },
            "methodIdentifiers": {
              "implementation()": "5c60da1b",
              "owner()": "8da5cb5b",
              "supportsInterface(bytes4)": "01ffc9a7",
              "transferOwnership(address)": "f2fde38b",
              "upgrade(address)": "0900f010"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"ImplementationUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Follows EIP-1967 beacon pattern but doesn't check for IERC165 support\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_implementation\":\"Initial implementation address\"}},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"Interface identifier\"},\"returns\":{\"_0\":\"bool True if interface is supported\"}},\"transferOwnership(address)\":{\"params\":{\"newOwner\":\"Address of the new owner\"}},\"upgrade(address)\":{\"params\":{\"newImplementation\":\"Address of the new implementation\"}}},\"title\":\"SimpleVaultBeacon\",\"version\":1},\"userdoc\":{\"errors\":{\"Unauthorized(address)\":[{\"notice\":\"Operation attempted by non-owner\"}],\"ZeroAddress()\":[{\"notice\":\"Zero address provided where a non-zero address is required\"}]},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor\"},\"supportsInterface(bytes4)\":{\"notice\":\"Interface support check\"},\"transferOwnership(address)\":{\"notice\":\"Transfer ownership of the beacon\"},\"upgrade(address)\":{\"notice\":\"Upgrade the implementation\"}},\"notice\":\"Simplified beacon contract for vault implementations\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/beacon/SimpleVaultBeacon.sol\":\"SimpleVaultBeacon\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"},\"src/beacon/SimpleVaultBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\nimport \\\"../libraries/LibErrors.sol\\\";\\n\\n/**\\n * @title SimpleVaultBeacon\\n * @notice Simplified beacon contract for vault implementations\\n * @dev Follows EIP-1967 beacon pattern but doesn't check for IERC165 support\\n */\\ncontract SimpleVaultBeacon is IERC165 {\\n    // Events\\n    event ImplementationUpgraded(\\n        address indexed oldImplementation, address indexed newImplementation\\n    );\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    // State variables\\n    address public implementation;\\n    address public owner;\\n\\n    // Modifiers\\n    modifier onlyOwner() {\\n        if (msg.sender != owner) revert LibErrors.Unauthorized(msg.sender);\\n        _;\\n    }\\n\\n    /**\\n     * @notice Constructor\\n     * @param _implementation Initial implementation address\\n     */\\n    constructor(address _implementation) {\\n        LibErrors.revertIfZeroAddress(_implementation);\\n        implementation = _implementation;\\n        owner = msg.sender;\\n        emit OwnershipTransferred(address(0), msg.sender);\\n    }\\n\\n    /**\\n     * @notice Upgrade the implementation\\n     * @param newImplementation Address of the new implementation\\n     */\\n    function upgrade(address newImplementation) external onlyOwner {\\n        LibErrors.revertIfZeroAddress(newImplementation);\\n        emit ImplementationUpgraded(implementation, newImplementation);\\n        implementation = newImplementation;\\n    }\\n\\n    /**\\n     * @notice Transfer ownership of the beacon\\n     * @param newOwner Address of the new owner\\n     */\\n    function transferOwnership(address newOwner) external onlyOwner {\\n        LibErrors.revertIfZeroAddress(newOwner);\\n        emit OwnershipTransferred(owner, newOwner);\\n        owner = newOwner;\\n    }\\n\\n    /**\\n     * @notice Interface support check\\n     * @param interfaceId Interface identifier\\n     * @return bool True if interface is supported\\n     */\\n    function supportsInterface(bytes4 interfaceId) public pure override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\\n/**\\n * @title SimpleERC721VaultBeacon\\n * @notice Simplified beacon for ERC721 vault implementations\\n */\\ncontract SimpleERC721VaultBeacon is SimpleVaultBeacon {\\n    constructor(address _implementation) SimpleVaultBeacon(_implementation) {}\\n}\\n\\n/**\\n * @title SimpleERC1155VaultBeacon\\n * @notice Simplified beacon for ERC1155 vault implementations\\n */\\ncontract SimpleERC1155VaultBeacon is SimpleVaultBeacon {\\n    constructor(address _implementation) SimpleVaultBeacon(_implementation) {}\\n}\\n\",\"keccak256\":\"0x8795fd379b2fcbaf800ca07f14d342c3bba0b171b25cda0c4e78a40cda27a58b\",\"license\":\"MIT\"},\"src/libraries/LibErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n/// @title LibErrors\\n/// @notice Library for centralized error definitions\\n/// @dev Contains all custom errors used across the system\\nlibrary LibErrors {\\n    // ============ Diamond Errors ============\\n\\n    /// @notice Function does not exist in any facet\\n    error FunctionNotFound(bytes4 selector);\\n\\n    /// @notice Initialization failed during diamond cut\\n    error DiamondInitFailed(address initContract, bytes initData);\\n\\n    /// @notice Invalid facet cut action provided\\n    error InvalidFacetCutAction(uint8 action);\\n\\n    /// @notice Function already exists and cannot be added again\\n    error FunctionAlreadyExists(bytes4 selector);\\n\\n    /// @notice Function doesn't exist and cannot be replaced/removed\\n    error FunctionDoesNotExist(bytes4 selector);\\n\\n    /// @notice Cannot replace function with same function\\n    error CannotReplaceSameFunction(bytes4 selector);\\n\\n    /// @notice Invalid initialization parameters\\n    error InvalidInitialization();\\n\\n    /// @notice Initialization contract has no code\\n    error InitializationContractEmpty(address initContract);\\n\\n    /// @notice Delegate call failed\\n    error DelegateCallFailed();\\n\\n    // ============ Common Errors ============\\n\\n    /// @notice Zero address provided where a non-zero address is required\\n    error ZeroAddress();\\n\\n    /// @notice Operation attempted by non-owner\\n    error Unauthorized(address caller);\\n\\n    /// @notice Invalid collection address provided\\n    error InvalidCollection(address collection);\\n\\n    /// @notice Factory not set in storage\\n    error FactoryNotSet();\\n\\n    /// @notice Transfer operation failed\\n    error TransferFailed();\\n\\n    /// @notice Invalid implementation contract\\n    error InvalidImplementation();\\n\\n    // ============ Collection Errors ============\\n\\n    /// @notice Invalid collection type provided\\n    error InvalidCollectionType(uint8 collectionType);\\n\\n    /// @notice Invalid operation for collection type\\n    error InvalidCollectionOperation(address collection);\\n\\n    /// @notice Not the owner of the collection\\n    error NotCollectionOwner(address collection, address caller);\\n\\n    // ============ Vault State Errors ============\\n\\n    /// @notice Vault is already locked\\n    error VaultAlreadyLocked(address collection, uint256 tokenId);\\n\\n    /// @notice Vault is not locked\\n    error VaultNotLocked(address collection, uint256 tokenId);\\n\\n    /// @notice Vault owner check failed\\n    error NotVaultOwner(address collection, uint256 tokenId, address caller);\\n\\n    // ============ Witness Errors ============\\n\\n    /// @notice Witness already exists\\n    error WitnessAlreadyExists(address witness);\\n\\n    /// @notice Witness does not exist\\n    error WitnessDoesNotExist(address witness);\\n\\n    /// @notice No witnesses remaining\\n    error NoWitnessesRemaining();\\n\\n    /// @notice Not a witness\\n    error NotWitness(address caller);\\n\\n    // ============ Signature Errors ============\\n\\n    /// @notice Invalid signature provided\\n    error InvalidSignature();\\n\\n    /// @notice Nonce already used\\n    error NonceAlreadyUsed(uint256 nonce);\\n\\n    // ============ Unvault Errors ============\\n\\n    /// @notice Unvaulter contract not set\\n    error UnvaulterNotSet();\\n\\n    /// @notice Token already unvaulted\\n    error AlreadyUnvaulted(address collection, uint256 tokenId);\\n\\n    /// @notice Burn operation failed\\n    error BurnFailed(address collection, uint256 tokenId);\\n\\n    // ============ Mint Errors ============\\n\\n    /// @notice Mint operation failed\\n    error MintFailed(address collection, uint256 tokenId);\\n\\n    /// @notice Invalid amount provided\\n    error InvalidAmount(uint256 amount);\\n\\n    /// @notice Price out of acceptable range\\n    error PriceOutOfRange(uint256 provided, uint256 expected, uint256 tolerance);\\n\\n    /// @notice Invalid token ID\\n    error InvalidTokenId(uint256 tokenId);\\n\\n    /// @notice Incorrect payment amount\\n    error IncorrectPayment(uint256 provided, uint256 expected);\\n\\n    /// @notice Eth transfer failed\\n    error ETHTransferFailed();\\n\\n    /// @notice Array length mismatch\\n    error LengthMismatch(uint256 length1, uint256 length2);\\n\\n    /// @notice Batch size exceeds limit\\n    error BatchSizeExceeded(uint256 size, uint256 limit);\\n\\n    /// @notice Recipient address does not match sender\\n    error InvalidRecipient();\\n\\n    /// @notice Number of serial numbers does not match amount\\n    error InvalidSerialNumbersCount();\\n\\n    /// @notice Required interface is not supported\\n    error InterfaceNotSupported(address contractAddress, string interfaceName);\\n\\n    // ============ Initialization Errors ============\\n\\n    /// @notice Already initialized\\n    error AlreadyInitialized();\\n\\n    /// @notice Initialization failed\\n    error InitializationFailed();\\n\\n    // ============ Helper Functions ============\\n\\n    /// @notice Check for zero address\\n    function revertIfZeroAddress(address addr) internal pure {\\n        if (addr == address(0)) revert ZeroAddress();\\n    }\\n\\n    /// @notice Check for valid collection\\n    function revertIfInvalidCollection(address collection, bool isValid) internal pure {\\n        if (!isValid) revert InvalidCollection(collection);\\n    }\\n\\n    /// @notice Check for factory\\n    function revertIfFactoryNotSet(address factory) internal pure {\\n        if (factory == address(0)) revert FactoryNotSet();\\n    }\\n\\n    /// @notice Check for vault lock state\\n    function revertIfAlreadyLocked(address collection, uint256 tokenId, bool isLocked)\\n        internal\\n        pure\\n    {\\n        if (isLocked) revert VaultAlreadyLocked(collection, tokenId);\\n    }\\n\\n    /// @notice Check for vault unlock state\\n    function revertIfNotLocked(address collection, uint256 tokenId, bool isLocked) internal pure {\\n        if (!isLocked) revert VaultNotLocked(collection, tokenId);\\n    }\\n\\n    /// @notice Check for witness status\\n    function revertIfNotWitness(address caller, bool isWitness) internal pure {\\n        if (!isWitness) revert NotWitness(caller);\\n    }\\n\\n    /// @notice Check for correct payment\\n    function revertIfIncorrectPayment(uint256 provided, uint256 expected) internal pure {\\n        if (provided != expected) revert IncorrectPayment(provided, expected);\\n    }\\n\\n    /// @notice Check for insufficient payment\\n    function revertIfInsufficientETH(uint256 provided, uint256 expected) internal pure {\\n        if (provided < expected) revert IncorrectPayment(provided, expected);\\n    }\\n\\n    /// @notice Check for price range\\n    function revertIfPriceOutOfRange(uint256 provided, uint256 expected, uint256 tolerance)\\n        internal\\n        pure\\n    {\\n        if (provided < expected - tolerance || provided > expected + tolerance) {\\n            revert PriceOutOfRange(provided, expected, tolerance);\\n        }\\n    }\\n\\n    /// @notice Check for vault ownership\\n    function revertIfNotVaultOwner(\\n        address collection,\\n        uint256 tokenId,\\n        address caller,\\n        address owner\\n    ) internal pure {\\n        if (caller != owner) revert NotVaultOwner(collection, tokenId, caller);\\n    }\\n\\n    /// @notice Check for collection ownership\\n    function revertIfNotCollectionOwner(address collection, address caller, address owner)\\n        internal\\n        pure\\n    {\\n        if (caller != owner) revert NotCollectionOwner(collection, caller);\\n    }\\n\\n    /// @notice Check for contract ownership\\n    function revertIfNotContractOwner(address caller, address owner) internal pure {\\n        if (caller != owner) revert Unauthorized(caller);\\n    }\\n\\n    /// @notice Check for function existence\\n    function revertIfFunctionNotFound(bytes4 selector, address facet) internal pure {\\n        if (facet == address(0)) revert FunctionNotFound(selector);\\n    }\\n\\n    /// @notice Check for initialization contract\\n    function revertIfInitializationInvalid(address initContract, bytes memory initData)\\n        internal\\n        pure\\n    {\\n        if (initContract == address(0) && initData.length > 0) revert InvalidInitialization();\\n        if (initContract != address(0) && initData.length == 0) revert InvalidInitialization();\\n    }\\n\\n    /// @notice Check for length mismatch\\n    function revertIfLengthMismatch(uint256 length1, uint256 length2) internal pure {\\n        if (length1 != length2) revert LengthMismatch(length1, length2);\\n    }\\n\\n    /// @notice Check for batch size limit\\n    function revertIfBatchSizeExceeded(uint256 size, uint256 limit) internal pure {\\n        if (size > limit) revert BatchSizeExceeded(size, limit);\\n    }\\n\\n    /// @notice Check if recipient matches sender\\n    function revertIfInvalidRecipient(address recipient, address sender) internal pure {\\n        if (recipient != sender) revert InvalidRecipient();\\n    }\\n\\n    /// @notice Check if contract supports required interface\\n    function revertIfInterfaceNotSupported(\\n        address contractAddress,\\n        bool isSupported,\\n        string memory interfaceName\\n    ) internal pure {\\n        if (!isSupported) revert InterfaceNotSupported(contractAddress, interfaceName);\\n    }\\n}\\n\",\"keccak256\":\"0x95df1fa4ab0e14172387b82a88e72662eccc990ec2cfb9ddd25ed538c005b5ac\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 32,
                "contract": "src/beacon/SimpleVaultBeacon.sol:SimpleVaultBeacon",
                "label": "implementation",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 34,
                "contract": "src/beacon/SimpleVaultBeacon.sol:SimpleVaultBeacon",
                "label": "owner",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              }
            }
          },
          "userdoc": {
            "errors": {
              "Unauthorized(address)": [
                { "notice": "Operation attempted by non-owner" }
              ],
              "ZeroAddress()": [
                {
                  "notice": "Zero address provided where a non-zero address is required"
                }
              ]
            },
            "kind": "user",
            "methods": {
              "constructor": { "notice": "Constructor" },
              "supportsInterface(bytes4)": {
                "notice": "Interface support check"
              },
              "transferOwnership(address)": {
                "notice": "Transfer ownership of the beacon"
              },
              "upgrade(address)": { "notice": "Upgrade the implementation" }
            },
            "notice": "Simplified beacon contract for vault implementations",
            "version": 1
          }
        }
      },
      "src/libraries/LibErrors.sol": {
        "LibErrors": {
          "abi": [
            { "inputs": [], "name": "AlreadyInitialized", "type": "error" },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "AlreadyUnvaulted",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "size",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                }
              ],
              "name": "BatchSizeExceeded",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "BurnFailed",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "selector",
                  "type": "bytes4"
                }
              ],
              "name": "CannotReplaceSameFunction",
              "type": "error"
            },
            { "inputs": [], "name": "DelegateCallFailed", "type": "error" },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "initContract",
                  "type": "address"
                },
                { "internalType": "bytes", "name": "initData", "type": "bytes" }
              ],
              "name": "DiamondInitFailed",
              "type": "error"
            },
            { "inputs": [], "name": "ETHTransferFailed", "type": "error" },
            { "inputs": [], "name": "FactoryNotSet", "type": "error" },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "selector",
                  "type": "bytes4"
                }
              ],
              "name": "FunctionAlreadyExists",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "selector",
                  "type": "bytes4"
                }
              ],
              "name": "FunctionDoesNotExist",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "selector",
                  "type": "bytes4"
                }
              ],
              "name": "FunctionNotFound",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "provided",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expected",
                  "type": "uint256"
                }
              ],
              "name": "IncorrectPayment",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "initContract",
                  "type": "address"
                }
              ],
              "name": "InitializationContractEmpty",
              "type": "error"
            },
            { "inputs": [], "name": "InitializationFailed", "type": "error" },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "contractAddress",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "interfaceName",
                  "type": "string"
                }
              ],
              "name": "InterfaceNotSupported",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "InvalidAmount",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                }
              ],
              "name": "InvalidCollection",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                }
              ],
              "name": "InvalidCollectionOperation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "collectionType",
                  "type": "uint8"
                }
              ],
              "name": "InvalidCollectionType",
              "type": "error"
            },
            {
              "inputs": [
                { "internalType": "uint8", "name": "action", "type": "uint8" }
              ],
              "name": "InvalidFacetCutAction",
              "type": "error"
            },
            { "inputs": [], "name": "InvalidImplementation", "type": "error" },
            { "inputs": [], "name": "InvalidInitialization", "type": "error" },
            { "inputs": [], "name": "InvalidRecipient", "type": "error" },
            {
              "inputs": [],
              "name": "InvalidSerialNumbersCount",
              "type": "error"
            },
            { "inputs": [], "name": "InvalidSignature", "type": "error" },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "InvalidTokenId",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "length1",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "length2",
                  "type": "uint256"
                }
              ],
              "name": "LengthMismatch",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "MintFailed",
              "type": "error"
            },
            { "inputs": [], "name": "NoWitnessesRemaining", "type": "error" },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                }
              ],
              "name": "NonceAlreadyUsed",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "caller",
                  "type": "address"
                }
              ],
              "name": "NotCollectionOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "caller",
                  "type": "address"
                }
              ],
              "name": "NotVaultOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "caller",
                  "type": "address"
                }
              ],
              "name": "NotWitness",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "provided",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expected",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tolerance",
                  "type": "uint256"
                }
              ],
              "name": "PriceOutOfRange",
              "type": "error"
            },
            { "inputs": [], "name": "TransferFailed", "type": "error" },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "caller",
                  "type": "address"
                }
              ],
              "name": "Unauthorized",
              "type": "error"
            },
            { "inputs": [], "name": "UnvaulterNotSet", "type": "error" },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "VaultAlreadyLocked",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "collection",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "VaultNotLocked",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "witness",
                  "type": "address"
                }
              ],
              "name": "WitnessAlreadyExists",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "witness",
                  "type": "address"
                }
              ],
              "name": "WitnessDoesNotExist",
              "type": "error"
            },
            { "inputs": [], "name": "ZeroAddress", "type": "error" }
          ],
          "devdoc": {
            "details": "Contains all custom errors used across the system",
            "kind": "dev",
            "methods": {},
            "title": "LibErrors",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220019dcb99e589a0541700f19a8fae60fdfe932004bd908df99fbe5f63a514b0de64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD SWAP14 0xCB SWAP10 0xE5 DUP10 LOG0 SLOAD OR STOP CALL SWAP11 DUP16 0xAE PUSH1 0xFD INVALID SWAP4 KECCAK256 DIV 0xBD SWAP1 DUP14 0xF9 SWAP16 0xBE PUSH0 PUSH4 0xA514B0DE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "192:8809:2:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "5f80fdfea2646970667358221220019dcb99e589a0541700f19a8fae60fdfe932004bd908df99fbe5f63a514b0de64736f6c634300081c0033",
              "opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD SWAP14 0xCB SWAP10 0xE5 DUP10 LOG0 SLOAD OR STOP CALL SWAP11 DUP16 0xAE PUSH1 0xFD INVALID SWAP4 KECCAK256 DIV 0xBD SWAP1 DUP14 0xF9 SWAP16 0xBE PUSH0 PUSH4 0xA514B0DE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "192:8809:2:-:0;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "11400",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "internal": {
                "revertIfAlreadyLocked(address,uint256,bool)": "infinite",
                "revertIfBatchSizeExceeded(uint256,uint256)": "infinite",
                "revertIfFactoryNotSet(address)": "infinite",
                "revertIfFunctionNotFound(bytes4,address)": "infinite",
                "revertIfIncorrectPayment(uint256,uint256)": "infinite",
                "revertIfInitializationInvalid(address,bytes memory)": "infinite",
                "revertIfInsufficientETH(uint256,uint256)": "infinite",
                "revertIfInterfaceNotSupported(address,bool,string memory)": "infinite",
                "revertIfInvalidCollection(address,bool)": "infinite",
                "revertIfInvalidRecipient(address,address)": "infinite",
                "revertIfLengthMismatch(uint256,uint256)": "infinite",
                "revertIfNotCollectionOwner(address,address,address)": "infinite",
                "revertIfNotContractOwner(address,address)": "infinite",
                "revertIfNotLocked(address,uint256,bool)": "infinite",
                "revertIfNotVaultOwner(address,uint256,address,address)": "infinite",
                "revertIfNotWitness(address,bool)": "infinite",
                "revertIfPriceOutOfRange(uint256,uint256,uint256)": "infinite",
                "revertIfZeroAddress(address)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"AlreadyUnvaulted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"BatchSizeExceeded\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"BurnFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"CannotReplaceSameFunction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DelegateCallFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"name\":\"DiamondInitFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ETHTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FactoryNotSet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"FunctionAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"FunctionDoesNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"FunctionNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"}],\"name\":\"IncorrectPayment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initContract\",\"type\":\"address\"}],\"name\":\"InitializationContractEmpty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InitializationFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"interfaceName\",\"type\":\"string\"}],\"name\":\"InterfaceNotSupported\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"InvalidCollection\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"InvalidCollectionOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"collectionType\",\"type\":\"uint8\"}],\"name\":\"InvalidCollectionType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"}],\"name\":\"InvalidFacetCutAction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSerialNumbersCount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"InvalidTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length2\",\"type\":\"uint256\"}],\"name\":\"LengthMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"MintFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoWitnessesRemaining\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"NonceAlreadyUsed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"NotCollectionOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"NotVaultOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"NotWitness\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tolerance\",\"type\":\"uint256\"}],\"name\":\"PriceOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnvaulterNotSet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"VaultAlreadyLocked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"VaultNotLocked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"witness\",\"type\":\"address\"}],\"name\":\"WitnessAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"witness\",\"type\":\"address\"}],\"name\":\"WitnessDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contains all custom errors used across the system\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LibErrors\",\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyInitialized()\":[{\"notice\":\"Already initialized\"}],\"AlreadyUnvaulted(address,uint256)\":[{\"notice\":\"Token already unvaulted\"}],\"BatchSizeExceeded(uint256,uint256)\":[{\"notice\":\"Batch size exceeds limit\"}],\"BurnFailed(address,uint256)\":[{\"notice\":\"Burn operation failed\"}],\"CannotReplaceSameFunction(bytes4)\":[{\"notice\":\"Cannot replace function with same function\"}],\"DelegateCallFailed()\":[{\"notice\":\"Delegate call failed\"}],\"DiamondInitFailed(address,bytes)\":[{\"notice\":\"Initialization failed during diamond cut\"}],\"ETHTransferFailed()\":[{\"notice\":\"Eth transfer failed\"}],\"FactoryNotSet()\":[{\"notice\":\"Factory not set in storage\"}],\"FunctionAlreadyExists(bytes4)\":[{\"notice\":\"Function already exists and cannot be added again\"}],\"FunctionDoesNotExist(bytes4)\":[{\"notice\":\"Function doesn't exist and cannot be replaced/removed\"}],\"FunctionNotFound(bytes4)\":[{\"notice\":\"Function does not exist in any facet\"}],\"IncorrectPayment(uint256,uint256)\":[{\"notice\":\"Incorrect payment amount\"}],\"InitializationContractEmpty(address)\":[{\"notice\":\"Initialization contract has no code\"}],\"InitializationFailed()\":[{\"notice\":\"Initialization failed\"}],\"InterfaceNotSupported(address,string)\":[{\"notice\":\"Required interface is not supported\"}],\"InvalidAmount(uint256)\":[{\"notice\":\"Invalid amount provided\"}],\"InvalidCollection(address)\":[{\"notice\":\"Invalid collection address provided\"}],\"InvalidCollectionOperation(address)\":[{\"notice\":\"Invalid operation for collection type\"}],\"InvalidCollectionType(uint8)\":[{\"notice\":\"Invalid collection type provided\"}],\"InvalidFacetCutAction(uint8)\":[{\"notice\":\"Invalid facet cut action provided\"}],\"InvalidImplementation()\":[{\"notice\":\"Invalid implementation contract\"}],\"InvalidInitialization()\":[{\"notice\":\"Invalid initialization parameters\"}],\"InvalidRecipient()\":[{\"notice\":\"Recipient address does not match sender\"}],\"InvalidSerialNumbersCount()\":[{\"notice\":\"Number of serial numbers does not match amount\"}],\"InvalidSignature()\":[{\"notice\":\"Invalid signature provided\"}],\"InvalidTokenId(uint256)\":[{\"notice\":\"Invalid token ID\"}],\"LengthMismatch(uint256,uint256)\":[{\"notice\":\"Array length mismatch\"}],\"MintFailed(address,uint256)\":[{\"notice\":\"Mint operation failed\"}],\"NoWitnessesRemaining()\":[{\"notice\":\"No witnesses remaining\"}],\"NonceAlreadyUsed(uint256)\":[{\"notice\":\"Nonce already used\"}],\"NotCollectionOwner(address,address)\":[{\"notice\":\"Not the owner of the collection\"}],\"NotVaultOwner(address,uint256,address)\":[{\"notice\":\"Vault owner check failed\"}],\"NotWitness(address)\":[{\"notice\":\"Not a witness\"}],\"PriceOutOfRange(uint256,uint256,uint256)\":[{\"notice\":\"Price out of acceptable range\"}],\"TransferFailed()\":[{\"notice\":\"Transfer operation failed\"}],\"Unauthorized(address)\":[{\"notice\":\"Operation attempted by non-owner\"}],\"UnvaulterNotSet()\":[{\"notice\":\"Unvaulter contract not set\"}],\"VaultAlreadyLocked(address,uint256)\":[{\"notice\":\"Vault is already locked\"}],\"VaultNotLocked(address,uint256)\":[{\"notice\":\"Vault is not locked\"}],\"WitnessAlreadyExists(address)\":[{\"notice\":\"Witness already exists\"}],\"WitnessDoesNotExist(address)\":[{\"notice\":\"Witness does not exist\"}],\"ZeroAddress()\":[{\"notice\":\"Zero address provided where a non-zero address is required\"}]},\"kind\":\"user\",\"methods\":{},\"notice\":\"Library for centralized error definitions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/LibErrors.sol\":\"LibErrors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/libraries/LibErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n/// @title LibErrors\\n/// @notice Library for centralized error definitions\\n/// @dev Contains all custom errors used across the system\\nlibrary LibErrors {\\n    // ============ Diamond Errors ============\\n\\n    /// @notice Function does not exist in any facet\\n    error FunctionNotFound(bytes4 selector);\\n\\n    /// @notice Initialization failed during diamond cut\\n    error DiamondInitFailed(address initContract, bytes initData);\\n\\n    /// @notice Invalid facet cut action provided\\n    error InvalidFacetCutAction(uint8 action);\\n\\n    /// @notice Function already exists and cannot be added again\\n    error FunctionAlreadyExists(bytes4 selector);\\n\\n    /// @notice Function doesn't exist and cannot be replaced/removed\\n    error FunctionDoesNotExist(bytes4 selector);\\n\\n    /// @notice Cannot replace function with same function\\n    error CannotReplaceSameFunction(bytes4 selector);\\n\\n    /// @notice Invalid initialization parameters\\n    error InvalidInitialization();\\n\\n    /// @notice Initialization contract has no code\\n    error InitializationContractEmpty(address initContract);\\n\\n    /// @notice Delegate call failed\\n    error DelegateCallFailed();\\n\\n    // ============ Common Errors ============\\n\\n    /// @notice Zero address provided where a non-zero address is required\\n    error ZeroAddress();\\n\\n    /// @notice Operation attempted by non-owner\\n    error Unauthorized(address caller);\\n\\n    /// @notice Invalid collection address provided\\n    error InvalidCollection(address collection);\\n\\n    /// @notice Factory not set in storage\\n    error FactoryNotSet();\\n\\n    /// @notice Transfer operation failed\\n    error TransferFailed();\\n\\n    /// @notice Invalid implementation contract\\n    error InvalidImplementation();\\n\\n    // ============ Collection Errors ============\\n\\n    /// @notice Invalid collection type provided\\n    error InvalidCollectionType(uint8 collectionType);\\n\\n    /// @notice Invalid operation for collection type\\n    error InvalidCollectionOperation(address collection);\\n\\n    /// @notice Not the owner of the collection\\n    error NotCollectionOwner(address collection, address caller);\\n\\n    // ============ Vault State Errors ============\\n\\n    /// @notice Vault is already locked\\n    error VaultAlreadyLocked(address collection, uint256 tokenId);\\n\\n    /// @notice Vault is not locked\\n    error VaultNotLocked(address collection, uint256 tokenId);\\n\\n    /// @notice Vault owner check failed\\n    error NotVaultOwner(address collection, uint256 tokenId, address caller);\\n\\n    // ============ Witness Errors ============\\n\\n    /// @notice Witness already exists\\n    error WitnessAlreadyExists(address witness);\\n\\n    /// @notice Witness does not exist\\n    error WitnessDoesNotExist(address witness);\\n\\n    /// @notice No witnesses remaining\\n    error NoWitnessesRemaining();\\n\\n    /// @notice Not a witness\\n    error NotWitness(address caller);\\n\\n    // ============ Signature Errors ============\\n\\n    /// @notice Invalid signature provided\\n    error InvalidSignature();\\n\\n    /// @notice Nonce already used\\n    error NonceAlreadyUsed(uint256 nonce);\\n\\n    // ============ Unvault Errors ============\\n\\n    /// @notice Unvaulter contract not set\\n    error UnvaulterNotSet();\\n\\n    /// @notice Token already unvaulted\\n    error AlreadyUnvaulted(address collection, uint256 tokenId);\\n\\n    /// @notice Burn operation failed\\n    error BurnFailed(address collection, uint256 tokenId);\\n\\n    // ============ Mint Errors ============\\n\\n    /// @notice Mint operation failed\\n    error MintFailed(address collection, uint256 tokenId);\\n\\n    /// @notice Invalid amount provided\\n    error InvalidAmount(uint256 amount);\\n\\n    /// @notice Price out of acceptable range\\n    error PriceOutOfRange(uint256 provided, uint256 expected, uint256 tolerance);\\n\\n    /// @notice Invalid token ID\\n    error InvalidTokenId(uint256 tokenId);\\n\\n    /// @notice Incorrect payment amount\\n    error IncorrectPayment(uint256 provided, uint256 expected);\\n\\n    /// @notice Eth transfer failed\\n    error ETHTransferFailed();\\n\\n    /// @notice Array length mismatch\\n    error LengthMismatch(uint256 length1, uint256 length2);\\n\\n    /// @notice Batch size exceeds limit\\n    error BatchSizeExceeded(uint256 size, uint256 limit);\\n\\n    /// @notice Recipient address does not match sender\\n    error InvalidRecipient();\\n\\n    /// @notice Number of serial numbers does not match amount\\n    error InvalidSerialNumbersCount();\\n\\n    /// @notice Required interface is not supported\\n    error InterfaceNotSupported(address contractAddress, string interfaceName);\\n\\n    // ============ Initialization Errors ============\\n\\n    /// @notice Already initialized\\n    error AlreadyInitialized();\\n\\n    /// @notice Initialization failed\\n    error InitializationFailed();\\n\\n    // ============ Helper Functions ============\\n\\n    /// @notice Check for zero address\\n    function revertIfZeroAddress(address addr) internal pure {\\n        if (addr == address(0)) revert ZeroAddress();\\n    }\\n\\n    /// @notice Check for valid collection\\n    function revertIfInvalidCollection(address collection, bool isValid) internal pure {\\n        if (!isValid) revert InvalidCollection(collection);\\n    }\\n\\n    /// @notice Check for factory\\n    function revertIfFactoryNotSet(address factory) internal pure {\\n        if (factory == address(0)) revert FactoryNotSet();\\n    }\\n\\n    /// @notice Check for vault lock state\\n    function revertIfAlreadyLocked(address collection, uint256 tokenId, bool isLocked)\\n        internal\\n        pure\\n    {\\n        if (isLocked) revert VaultAlreadyLocked(collection, tokenId);\\n    }\\n\\n    /// @notice Check for vault unlock state\\n    function revertIfNotLocked(address collection, uint256 tokenId, bool isLocked) internal pure {\\n        if (!isLocked) revert VaultNotLocked(collection, tokenId);\\n    }\\n\\n    /// @notice Check for witness status\\n    function revertIfNotWitness(address caller, bool isWitness) internal pure {\\n        if (!isWitness) revert NotWitness(caller);\\n    }\\n\\n    /// @notice Check for correct payment\\n    function revertIfIncorrectPayment(uint256 provided, uint256 expected) internal pure {\\n        if (provided != expected) revert IncorrectPayment(provided, expected);\\n    }\\n\\n    /// @notice Check for insufficient payment\\n    function revertIfInsufficientETH(uint256 provided, uint256 expected) internal pure {\\n        if (provided < expected) revert IncorrectPayment(provided, expected);\\n    }\\n\\n    /// @notice Check for price range\\n    function revertIfPriceOutOfRange(uint256 provided, uint256 expected, uint256 tolerance)\\n        internal\\n        pure\\n    {\\n        if (provided < expected - tolerance || provided > expected + tolerance) {\\n            revert PriceOutOfRange(provided, expected, tolerance);\\n        }\\n    }\\n\\n    /// @notice Check for vault ownership\\n    function revertIfNotVaultOwner(\\n        address collection,\\n        uint256 tokenId,\\n        address caller,\\n        address owner\\n    ) internal pure {\\n        if (caller != owner) revert NotVaultOwner(collection, tokenId, caller);\\n    }\\n\\n    /// @notice Check for collection ownership\\n    function revertIfNotCollectionOwner(address collection, address caller, address owner)\\n        internal\\n        pure\\n    {\\n        if (caller != owner) revert NotCollectionOwner(collection, caller);\\n    }\\n\\n    /// @notice Check for contract ownership\\n    function revertIfNotContractOwner(address caller, address owner) internal pure {\\n        if (caller != owner) revert Unauthorized(caller);\\n    }\\n\\n    /// @notice Check for function existence\\n    function revertIfFunctionNotFound(bytes4 selector, address facet) internal pure {\\n        if (facet == address(0)) revert FunctionNotFound(selector);\\n    }\\n\\n    /// @notice Check for initialization contract\\n    function revertIfInitializationInvalid(address initContract, bytes memory initData)\\n        internal\\n        pure\\n    {\\n        if (initContract == address(0) && initData.length > 0) revert InvalidInitialization();\\n        if (initContract != address(0) && initData.length == 0) revert InvalidInitialization();\\n    }\\n\\n    /// @notice Check for length mismatch\\n    function revertIfLengthMismatch(uint256 length1, uint256 length2) internal pure {\\n        if (length1 != length2) revert LengthMismatch(length1, length2);\\n    }\\n\\n    /// @notice Check for batch size limit\\n    function revertIfBatchSizeExceeded(uint256 size, uint256 limit) internal pure {\\n        if (size > limit) revert BatchSizeExceeded(size, limit);\\n    }\\n\\n    /// @notice Check if recipient matches sender\\n    function revertIfInvalidRecipient(address recipient, address sender) internal pure {\\n        if (recipient != sender) revert InvalidRecipient();\\n    }\\n\\n    /// @notice Check if contract supports required interface\\n    function revertIfInterfaceNotSupported(\\n        address contractAddress,\\n        bool isSupported,\\n        string memory interfaceName\\n    ) internal pure {\\n        if (!isSupported) revert InterfaceNotSupported(contractAddress, interfaceName);\\n    }\\n}\\n\",\"keccak256\":\"0x95df1fa4ab0e14172387b82a88e72662eccc990ec2cfb9ddd25ed538c005b5ac\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": { "storage": [], "types": null },
          "userdoc": {
            "errors": {
              "AlreadyInitialized()": [{ "notice": "Already initialized" }],
              "AlreadyUnvaulted(address,uint256)": [
                { "notice": "Token already unvaulted" }
              ],
              "BatchSizeExceeded(uint256,uint256)": [
                { "notice": "Batch size exceeds limit" }
              ],
              "BurnFailed(address,uint256)": [
                { "notice": "Burn operation failed" }
              ],
              "CannotReplaceSameFunction(bytes4)": [
                { "notice": "Cannot replace function with same function" }
              ],
              "DelegateCallFailed()": [{ "notice": "Delegate call failed" }],
              "DiamondInitFailed(address,bytes)": [
                { "notice": "Initialization failed during diamond cut" }
              ],
              "ETHTransferFailed()": [{ "notice": "Eth transfer failed" }],
              "FactoryNotSet()": [{ "notice": "Factory not set in storage" }],
              "FunctionAlreadyExists(bytes4)": [
                {
                  "notice": "Function already exists and cannot be added again"
                }
              ],
              "FunctionDoesNotExist(bytes4)": [
                {
                  "notice": "Function doesn't exist and cannot be replaced/removed"
                }
              ],
              "FunctionNotFound(bytes4)": [
                { "notice": "Function does not exist in any facet" }
              ],
              "IncorrectPayment(uint256,uint256)": [
                { "notice": "Incorrect payment amount" }
              ],
              "InitializationContractEmpty(address)": [
                { "notice": "Initialization contract has no code" }
              ],
              "InitializationFailed()": [{ "notice": "Initialization failed" }],
              "InterfaceNotSupported(address,string)": [
                { "notice": "Required interface is not supported" }
              ],
              "InvalidAmount(uint256)": [
                { "notice": "Invalid amount provided" }
              ],
              "InvalidCollection(address)": [
                { "notice": "Invalid collection address provided" }
              ],
              "InvalidCollectionOperation(address)": [
                { "notice": "Invalid operation for collection type" }
              ],
              "InvalidCollectionType(uint8)": [
                { "notice": "Invalid collection type provided" }
              ],
              "InvalidFacetCutAction(uint8)": [
                { "notice": "Invalid facet cut action provided" }
              ],
              "InvalidImplementation()": [
                { "notice": "Invalid implementation contract" }
              ],
              "InvalidInitialization()": [
                { "notice": "Invalid initialization parameters" }
              ],
              "InvalidRecipient()": [
                { "notice": "Recipient address does not match sender" }
              ],
              "InvalidSerialNumbersCount()": [
                { "notice": "Number of serial numbers does not match amount" }
              ],
              "InvalidSignature()": [
                { "notice": "Invalid signature provided" }
              ],
              "InvalidTokenId(uint256)": [{ "notice": "Invalid token ID" }],
              "LengthMismatch(uint256,uint256)": [
                { "notice": "Array length mismatch" }
              ],
              "MintFailed(address,uint256)": [
                { "notice": "Mint operation failed" }
              ],
              "NoWitnessesRemaining()": [
                { "notice": "No witnesses remaining" }
              ],
              "NonceAlreadyUsed(uint256)": [{ "notice": "Nonce already used" }],
              "NotCollectionOwner(address,address)": [
                { "notice": "Not the owner of the collection" }
              ],
              "NotVaultOwner(address,uint256,address)": [
                { "notice": "Vault owner check failed" }
              ],
              "NotWitness(address)": [{ "notice": "Not a witness" }],
              "PriceOutOfRange(uint256,uint256,uint256)": [
                { "notice": "Price out of acceptable range" }
              ],
              "TransferFailed()": [{ "notice": "Transfer operation failed" }],
              "Unauthorized(address)": [
                { "notice": "Operation attempted by non-owner" }
              ],
              "UnvaulterNotSet()": [{ "notice": "Unvaulter contract not set" }],
              "VaultAlreadyLocked(address,uint256)": [
                { "notice": "Vault is already locked" }
              ],
              "VaultNotLocked(address,uint256)": [
                { "notice": "Vault is not locked" }
              ],
              "WitnessAlreadyExists(address)": [
                { "notice": "Witness already exists" }
              ],
              "WitnessDoesNotExist(address)": [
                { "notice": "Witness does not exist" }
              ],
              "ZeroAddress()": [
                {
                  "notice": "Zero address provided where a non-zero address is required"
                }
              ]
            },
            "kind": "user",
            "methods": {},
            "notice": "Library for centralized error definitions",
            "version": 1
          }
        }
      }
    }
  }
}
