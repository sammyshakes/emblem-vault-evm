/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IERC721AExtension,
  IERC721AExtensionInterface,
} from "../../../src/interfaces/IERC721AExtension";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "internalTokenId",
        type: "uint256",
      },
    ],
    name: "getExternalTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "externalTokenId",
        type: "uint256",
      },
    ],
    name: "getInternalTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    name: "setDetails",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IERC721AExtension__factory {
  static readonly abi = _abi;
  static createInterface(): IERC721AExtensionInterface {
    return new Interface(_abi) as IERC721AExtensionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IERC721AExtension {
    return new Contract(address, _abi, runner) as unknown as IERC721AExtension;
  }
}
