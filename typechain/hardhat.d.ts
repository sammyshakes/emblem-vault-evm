/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "ERC1155Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Upgradeable__factory>;
    getContractFactory(
      name: "ERC1155BurnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155BurnableUpgradeable__factory>;
    getContractFactory(
      name: "ERC1155SupplyUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155SupplyUpgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Errors__factory>;
    getContractFactory(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Errors__factory>;
    getContractFactory(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Errors__factory>;
    getContractFactory(
      name: "IERC1363",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1363__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "SafeERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeERC20__factory>;
    getContractFactory(
      name: "Address",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Address__factory>;
    getContractFactory(
      name: "Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Errors__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCast__factory>;
    getContractFactory(
      name: "Strings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Strings__factory>;
    getContractFactory(
      name: "ERC721A__IERC721ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721A__IERC721ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "ERC721AUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AUpgradeable__factory>;
    getContractFactory(
      name: "ERC721ABurnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721ABurnableUpgradeable__factory>;
    getContractFactory(
      name: "IERC721ABurnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721ABurnableUpgradeable__factory>;
    getContractFactory(
      name: "IERC721AUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721AUpgradeable__factory>;
    getContractFactory(
      name: "SimpleERC1155VaultBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleERC1155VaultBeacon__factory>;
    getContractFactory(
      name: "SimpleERC721VaultBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleERC721VaultBeacon__factory>;
    getContractFactory(
      name: "SimpleVaultBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleVaultBeacon__factory>;
    getContractFactory(
      name: "ERC1155VaultBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155VaultBeacon__factory>;
    getContractFactory(
      name: "ERC721VaultBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721VaultBeacon__factory>;
    getContractFactory(
      name: "VaultBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultBeacon__factory>;
    getContractFactory(
      name: "ERC1155VaultProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155VaultProxy__factory>;
    getContractFactory(
      name: "ERC721VaultProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721VaultProxy__factory>;
    getContractFactory(
      name: "VaultProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultProxy__factory>;
    getContractFactory(
      name: "EmblemVaultDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EmblemVaultDiamond__factory>;
    getContractFactory(
      name: "DiamondCutFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondCutFacet__factory>;
    getContractFactory(
      name: "DiamondLoupeFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondLoupeFacet__factory>;
    getContractFactory(
      name: "DiamondLoupeFacetOptimized",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondLoupeFacetOptimized__factory>;
    getContractFactory(
      name: "EmblemVaultCollectionFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EmblemVaultCollectionFacet__factory>;
    getContractFactory(
      name: "EmblemVaultCoreFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EmblemVaultCoreFacet__factory>;
    getContractFactory(
      name: "EmblemVaultInitFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EmblemVaultInitFacet__factory>;
    getContractFactory(
      name: "EmblemVaultMintFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EmblemVaultMintFacet__factory>;
    getContractFactory(
      name: "EmblemVaultUnvaultFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EmblemVaultUnvaultFacet__factory>;
    getContractFactory(
      name: "OwnershipFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnershipFacet__factory>;
    getContractFactory(
      name: "VaultCollectionFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultCollectionFactory__factory>;
    getContractFactory(
      name: "ERC1155VaultImplementation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155VaultImplementation__factory>;
    getContractFactory(
      name: "ERC721VaultImplementation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721VaultImplementation__factory>;
    getContractFactory(
      name: "IDiamondCut",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondCut__factory>;
    getContractFactory(
      name: "IDiamondLoupe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondLoupe__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Vault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Vault__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Token",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Token__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721AExtension",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721AExtension__factory>;
    getContractFactory(
      name: "IERC721AVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721AVault__factory>;
    getContractFactory(
      name: "IIsSerialized",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIsSerialized__factory>;
    getContractFactory(
      name: "IUnvaulted",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUnvaulted__factory>;
    getContractFactory(
      name: "IVaultBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVaultBeacon__factory>;
    getContractFactory(
      name: "IVaultCollectionFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVaultCollectionFactory__factory>;
    getContractFactory(
      name: "IERC1155VaultProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155VaultProxy__factory>;
    getContractFactory(
      name: "IERC721VaultProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721VaultProxy__factory>;
    getContractFactory(
      name: "IVaultProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVaultProxy__factory>;
    getContractFactory(
      name: "LibDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibDiamond__factory>;
    getContractFactory(
      name: "LibEmblemVaultStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibEmblemVaultStorage__factory>;
    getContractFactory(
      name: "LibErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibErrors__factory>;
    getContractFactory(
      name: "LibSignature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibSignature__factory>;

    getContractAt(
      name: "OwnableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "Initializable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "ERC1155Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Upgradeable>;
    getContractAt(
      name: "ERC1155BurnableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155BurnableUpgradeable>;
    getContractAt(
      name: "ERC1155SupplyUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155SupplyUpgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1155Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Errors>;
    getContractAt(
      name: "IERC20Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Errors>;
    getContractAt(
      name: "IERC721Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Errors>;
    getContractAt(
      name: "IERC1363",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1363>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "SafeERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeERC20>;
    getContractAt(
      name: "Address",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Address>;
    getContractAt(
      name: "Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Errors>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "SafeCast",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCast>;
    getContractAt(
      name: "Strings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Strings>;
    getContractAt(
      name: "ERC721A__IERC721ReceiverUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721A__IERC721ReceiverUpgradeable>;
    getContractAt(
      name: "ERC721AUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AUpgradeable>;
    getContractAt(
      name: "ERC721ABurnableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721ABurnableUpgradeable>;
    getContractAt(
      name: "IERC721ABurnableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721ABurnableUpgradeable>;
    getContractAt(
      name: "IERC721AUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721AUpgradeable>;
    getContractAt(
      name: "SimpleERC1155VaultBeacon",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleERC1155VaultBeacon>;
    getContractAt(
      name: "SimpleERC721VaultBeacon",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleERC721VaultBeacon>;
    getContractAt(
      name: "SimpleVaultBeacon",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleVaultBeacon>;
    getContractAt(
      name: "ERC1155VaultBeacon",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155VaultBeacon>;
    getContractAt(
      name: "ERC721VaultBeacon",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721VaultBeacon>;
    getContractAt(
      name: "VaultBeacon",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultBeacon>;
    getContractAt(
      name: "ERC1155VaultProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155VaultProxy>;
    getContractAt(
      name: "ERC721VaultProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721VaultProxy>;
    getContractAt(
      name: "VaultProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultProxy>;
    getContractAt(
      name: "EmblemVaultDiamond",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EmblemVaultDiamond>;
    getContractAt(
      name: "DiamondCutFacet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondCutFacet>;
    getContractAt(
      name: "DiamondLoupeFacet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondLoupeFacet>;
    getContractAt(
      name: "DiamondLoupeFacetOptimized",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondLoupeFacetOptimized>;
    getContractAt(
      name: "EmblemVaultCollectionFacet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EmblemVaultCollectionFacet>;
    getContractAt(
      name: "EmblemVaultCoreFacet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EmblemVaultCoreFacet>;
    getContractAt(
      name: "EmblemVaultInitFacet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EmblemVaultInitFacet>;
    getContractAt(
      name: "EmblemVaultMintFacet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EmblemVaultMintFacet>;
    getContractAt(
      name: "EmblemVaultUnvaultFacet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EmblemVaultUnvaultFacet>;
    getContractAt(
      name: "OwnershipFacet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnershipFacet>;
    getContractAt(
      name: "VaultCollectionFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultCollectionFactory>;
    getContractAt(
      name: "ERC1155VaultImplementation",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155VaultImplementation>;
    getContractAt(
      name: "ERC721VaultImplementation",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721VaultImplementation>;
    getContractAt(
      name: "IDiamondCut",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondCut>;
    getContractAt(
      name: "IDiamondLoupe",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondLoupe>;
    getContractAt(
      name: "IERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Vault",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Vault>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Token",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Token>;
    getContractAt(
      name: "IERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721AExtension",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721AExtension>;
    getContractAt(
      name: "IERC721AVault",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721AVault>;
    getContractAt(
      name: "IIsSerialized",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IIsSerialized>;
    getContractAt(
      name: "IUnvaulted",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IUnvaulted>;
    getContractAt(
      name: "IVaultBeacon",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IVaultBeacon>;
    getContractAt(
      name: "IVaultCollectionFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IVaultCollectionFactory>;
    getContractAt(
      name: "IERC1155VaultProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155VaultProxy>;
    getContractAt(
      name: "IERC721VaultProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721VaultProxy>;
    getContractAt(
      name: "IVaultProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IVaultProxy>;
    getContractAt(
      name: "LibDiamond",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LibDiamond>;
    getContractAt(
      name: "LibEmblemVaultStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LibEmblemVaultStorage>;
    getContractAt(
      name: "LibErrors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LibErrors>;
    getContractAt(
      name: "LibSignature",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LibSignature>;

    deployContract(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnableUpgradeable>;
    deployContract(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "ERC1155Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Upgradeable>;
    deployContract(
      name: "ERC1155BurnableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155BurnableUpgradeable>;
    deployContract(
      name: "ERC1155SupplyUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155SupplyUpgradeable>;
    deployContract(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContextUpgradeable>;
    deployContract(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165Upgradeable>;
    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Errors>;
    deployContract(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Errors>;
    deployContract(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Errors>;
    deployContract(
      name: "IERC1363",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1363>;
    deployContract(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155MetadataURI>;
    deployContract(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155>;
    deployContract(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Receiver>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "SafeERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeERC20>;
    deployContract(
      name: "Address",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Address>;
    deployContract(
      name: "Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Errors>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "Strings",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "ERC721A__IERC721ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721A__IERC721ReceiverUpgradeable>;
    deployContract(
      name: "ERC721AUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721AUpgradeable>;
    deployContract(
      name: "ERC721ABurnableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721ABurnableUpgradeable>;
    deployContract(
      name: "IERC721ABurnableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721ABurnableUpgradeable>;
    deployContract(
      name: "IERC721AUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721AUpgradeable>;
    deployContract(
      name: "SimpleERC1155VaultBeacon",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SimpleERC1155VaultBeacon>;
    deployContract(
      name: "SimpleERC721VaultBeacon",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SimpleERC721VaultBeacon>;
    deployContract(
      name: "SimpleVaultBeacon",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SimpleVaultBeacon>;
    deployContract(
      name: "ERC1155VaultBeacon",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155VaultBeacon>;
    deployContract(
      name: "ERC721VaultBeacon",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721VaultBeacon>;
    deployContract(
      name: "VaultBeacon",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VaultBeacon>;
    deployContract(
      name: "ERC1155VaultProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155VaultProxy>;
    deployContract(
      name: "ERC721VaultProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721VaultProxy>;
    deployContract(
      name: "VaultProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VaultProxy>;
    deployContract(
      name: "EmblemVaultDiamond",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EmblemVaultDiamond>;
    deployContract(
      name: "DiamondCutFacet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DiamondCutFacet>;
    deployContract(
      name: "DiamondLoupeFacet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DiamondLoupeFacet>;
    deployContract(
      name: "DiamondLoupeFacetOptimized",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DiamondLoupeFacetOptimized>;
    deployContract(
      name: "EmblemVaultCollectionFacet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EmblemVaultCollectionFacet>;
    deployContract(
      name: "EmblemVaultCoreFacet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EmblemVaultCoreFacet>;
    deployContract(
      name: "EmblemVaultInitFacet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EmblemVaultInitFacet>;
    deployContract(
      name: "EmblemVaultMintFacet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EmblemVaultMintFacet>;
    deployContract(
      name: "EmblemVaultUnvaultFacet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EmblemVaultUnvaultFacet>;
    deployContract(
      name: "OwnershipFacet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnershipFacet>;
    deployContract(
      name: "VaultCollectionFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VaultCollectionFactory>;
    deployContract(
      name: "ERC1155VaultImplementation",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155VaultImplementation>;
    deployContract(
      name: "ERC721VaultImplementation",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721VaultImplementation>;
    deployContract(
      name: "IDiamondCut",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondCut>;
    deployContract(
      name: "IDiamondLoupe",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondLoupe>;
    deployContract(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155>;
    deployContract(
      name: "IERC1155Vault",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Vault>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "IERC20Token",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Token>;
    deployContract(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IERC721AExtension",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721AExtension>;
    deployContract(
      name: "IERC721AVault",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721AVault>;
    deployContract(
      name: "IIsSerialized",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IIsSerialized>;
    deployContract(
      name: "IUnvaulted",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IUnvaulted>;
    deployContract(
      name: "IVaultBeacon",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVaultBeacon>;
    deployContract(
      name: "IVaultCollectionFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVaultCollectionFactory>;
    deployContract(
      name: "IERC1155VaultProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155VaultProxy>;
    deployContract(
      name: "IERC721VaultProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721VaultProxy>;
    deployContract(
      name: "IVaultProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVaultProxy>;
    deployContract(
      name: "LibDiamond",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LibDiamond>;
    deployContract(
      name: "LibEmblemVaultStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LibEmblemVaultStorage>;
    deployContract(
      name: "LibErrors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LibErrors>;
    deployContract(
      name: "LibSignature",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LibSignature>;

    deployContract(
      name: "OwnableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnableUpgradeable>;
    deployContract(
      name: "Initializable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "ERC1155Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Upgradeable>;
    deployContract(
      name: "ERC1155BurnableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155BurnableUpgradeable>;
    deployContract(
      name: "ERC1155SupplyUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155SupplyUpgradeable>;
    deployContract(
      name: "ContextUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContextUpgradeable>;
    deployContract(
      name: "ERC165Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165Upgradeable>;
    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IERC1155Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Errors>;
    deployContract(
      name: "IERC20Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Errors>;
    deployContract(
      name: "IERC721Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Errors>;
    deployContract(
      name: "IERC1363",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1363>;
    deployContract(
      name: "IERC1155MetadataURI",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155MetadataURI>;
    deployContract(
      name: "IERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155>;
    deployContract(
      name: "IERC1155Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Receiver>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "SafeERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeERC20>;
    deployContract(
      name: "Address",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Address>;
    deployContract(
      name: "Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Errors>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "SafeCast",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "Strings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "ERC721A__IERC721ReceiverUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721A__IERC721ReceiverUpgradeable>;
    deployContract(
      name: "ERC721AUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721AUpgradeable>;
    deployContract(
      name: "ERC721ABurnableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721ABurnableUpgradeable>;
    deployContract(
      name: "IERC721ABurnableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721ABurnableUpgradeable>;
    deployContract(
      name: "IERC721AUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721AUpgradeable>;
    deployContract(
      name: "SimpleERC1155VaultBeacon",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SimpleERC1155VaultBeacon>;
    deployContract(
      name: "SimpleERC721VaultBeacon",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SimpleERC721VaultBeacon>;
    deployContract(
      name: "SimpleVaultBeacon",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SimpleVaultBeacon>;
    deployContract(
      name: "ERC1155VaultBeacon",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155VaultBeacon>;
    deployContract(
      name: "ERC721VaultBeacon",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721VaultBeacon>;
    deployContract(
      name: "VaultBeacon",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VaultBeacon>;
    deployContract(
      name: "ERC1155VaultProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155VaultProxy>;
    deployContract(
      name: "ERC721VaultProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721VaultProxy>;
    deployContract(
      name: "VaultProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VaultProxy>;
    deployContract(
      name: "EmblemVaultDiamond",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EmblemVaultDiamond>;
    deployContract(
      name: "DiamondCutFacet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DiamondCutFacet>;
    deployContract(
      name: "DiamondLoupeFacet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DiamondLoupeFacet>;
    deployContract(
      name: "DiamondLoupeFacetOptimized",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DiamondLoupeFacetOptimized>;
    deployContract(
      name: "EmblemVaultCollectionFacet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EmblemVaultCollectionFacet>;
    deployContract(
      name: "EmblemVaultCoreFacet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EmblemVaultCoreFacet>;
    deployContract(
      name: "EmblemVaultInitFacet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EmblemVaultInitFacet>;
    deployContract(
      name: "EmblemVaultMintFacet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EmblemVaultMintFacet>;
    deployContract(
      name: "EmblemVaultUnvaultFacet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EmblemVaultUnvaultFacet>;
    deployContract(
      name: "OwnershipFacet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnershipFacet>;
    deployContract(
      name: "VaultCollectionFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VaultCollectionFactory>;
    deployContract(
      name: "ERC1155VaultImplementation",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155VaultImplementation>;
    deployContract(
      name: "ERC721VaultImplementation",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721VaultImplementation>;
    deployContract(
      name: "IDiamondCut",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondCut>;
    deployContract(
      name: "IDiamondLoupe",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondLoupe>;
    deployContract(
      name: "IERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155>;
    deployContract(
      name: "IERC1155Vault",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Vault>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "IERC20Token",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Token>;
    deployContract(
      name: "IERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IERC721AExtension",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721AExtension>;
    deployContract(
      name: "IERC721AVault",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721AVault>;
    deployContract(
      name: "IIsSerialized",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IIsSerialized>;
    deployContract(
      name: "IUnvaulted",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IUnvaulted>;
    deployContract(
      name: "IVaultBeacon",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVaultBeacon>;
    deployContract(
      name: "IVaultCollectionFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVaultCollectionFactory>;
    deployContract(
      name: "IERC1155VaultProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155VaultProxy>;
    deployContract(
      name: "IERC721VaultProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721VaultProxy>;
    deployContract(
      name: "IVaultProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVaultProxy>;
    deployContract(
      name: "LibDiamond",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LibDiamond>;
    deployContract(
      name: "LibEmblemVaultStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LibEmblemVaultStorage>;
    deployContract(
      name: "LibErrors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LibErrors>;
    deployContract(
      name: "LibSignature",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LibSignature>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
